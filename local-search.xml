<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>我与地坛笔记</title>
    <link href="/posts/1520/"/>
    <url>/posts/1520/</url>
    
    <content type="html"><![CDATA[<p><a href="https://book.douban.com/subject/5910656/">我与地坛</a></p><p>但是太阳，他每时每刻都是夕阳也都是旭日。当他熄灭着走下山去收尽<strong>苍凉残照</strong>之际，正是他在另一面燃烧着爬上山巅布散烈烈朝辉之时。那一天，我也将沉静着走下山去，扶着我的拐杖。</p><p>有一天，在某一处山洼里，势必会跑上来一个欢蹦的孩子，抱着他的玩具。</p><p><strong>当然，那不是我。</strong></p><p><strong>但是，那不是我吗？</strong></p><p>宇宙以其不息的欲望将一个歌舞炼为<strong>永恒</strong>。这欲望有怎样一个人间的姓名，大可忽略不计。</p>]]></content>
    
    
    <categories>
      
      <category>世间行乐应如是</category>
      
      <category>读万卷书</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阅读</tag>
      
      <tag>文学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>丰筐行其祀</title>
    <link href="/posts/38b5/"/>
    <url>/posts/38b5/</url>
    
    <content type="html"><![CDATA[<p>威国两年半，天下大旱，民不聊生。一日早朝，皇帝开腔询问：“天下大灾，众爱卿可有妙计救天下苍生。”满朝文武战战兢兢不敢言语，正在此时，右相陈言：“陛下，臣有一门客谓姬。姬善做法，必有妙计！”皇帝闻言大喜：“速速昭姬入朝！”</p><p>姬信步入朝，皇帝开腔：“姬可有妙法可救天下苍生，延我国运？”姬曰：”陛下，此事易甚。草民有筐一，须得财宝丰之，待草民负之而祀，国运通达，天下大兴！“姬探手入袖，其筐甚微，不过五寸。皇帝大喜：”速速执行！“姬抬手掷筐，迎风而长，大一丈有余。皇帝怒，责姬入狱。</p><p>威国渐弱，皇帝愁苦，郁郁而终。二世肯登基，大赦天下，昭姬入朝：”姬，昔事莫议。若姬可做法救天下苍生，朕赐黄金万两，位及人臣！“姬曰：”陛下，待草民负筐而祀，国运通达，可兴五世！“肯虽怒,仍言：”善。”</p><p>姬掷其筐，肯遣朝臣取财宝丰之。姬负而行其祀，威国昌盛，五世而衰。史官执笔曰：肯得姬丰筐行其祀，威沃五世。</p>]]></content>
    
    
    <categories>
      
      <category>杂技杂记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>rubbish</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网络训练中的eval与no_grad</title>
    <link href="/posts/be0b/"/>
    <url>/posts/be0b/</url>
    
    <content type="html"><![CDATA[<h3 id="model-eval"><a href="#model-eval" class="headerlink" title="model.eval()"></a>model.eval()</h3><p>model.eval()不会影响各层的gradient计算行为，即gradient计算和存储与training模式一样，只是不进行反向传播(backprobagation)</p><p>具体参考 <a href="%E7%BD%91%E7%BB%9C%E8%AE%AD%E7%BB%83%E4%B8%AD%E7%9A%84train%E5%92%8Ceval%E6%A8%A1%E5%BC%8F.md">网络训练中的train和eval模式</a></p><h3 id="torch-no-grad"><a href="#torch-no-grad" class="headerlink" title="torch.no_grad()"></a>torch.no_grad()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> torch.no_grad()：<br><span class="hljs-comment"># 代码块</span><br></code></pre></td></tr></table></figure><ol><li>用于停止autograd模块的工作，起到加速和节省显存的作用（具体行为就是停止gradient计算，从而节省了GPU算力和显存）</li><li>不会影响dropout和batchnorm层的行为</li></ol><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>可以同时使用，仅使用model.eval()已足够得到正确的validation的结果；</p><p>而with torch.zero_grad()则是更进一步加速和节省gpu空间（因为不用计算和存储gradient），从而可以更快计算，也可以跑更大的batch来测试。</p>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
      <category>PyTorch学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI</tag>
      
      <tag>Pytorch</tag>
      
      <tag>Python</tag>
      
      <tag>神经网络</tag>
      
      <tag>模型训练</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网络训练中的train和eval模式</title>
    <link href="/posts/aac5/"/>
    <url>/posts/aac5/</url>
    
    <content type="html"><![CDATA[<h3 id="model-train"><a href="#model-train" class="headerlink" title="model.train()"></a>model.train()</h3><p>model.train()的作用是<strong>启用 Batch Normalization 和 Dropout</strong>。</p><p>如果模型中有BN层(Batch Normalization）和Dropout，需要在训练时添加model.train()。</p><p>model.train()是保证BN层能够用到每一批数据的均值和方差。对于Dropout，model.train()是随机取一部分网络连接来训练更新参数。 </p><h3 id="model-eval"><a href="#model-eval" class="headerlink" title="model.eval()"></a>model.eval()</h3><p>model.eval()的作用是<strong>不启用 Batch Normalization 和 Dropout</strong>。</p><p>如果模型中有BN层(Batch Normalization）和Dropout，在测试时添加model.eval()。</p><p>model.eval()是保证BN层能够<strong>用全部训练数据</strong>的均值和方差，即测试过程中要保证BN层的均值和方差不变。对于Dropout，model.eval()是利用到了<strong>所有网络连接</strong>，即不进行随机舍弃神经元。</p><h3 id="测试时候的设定"><a href="#测试时候的设定" class="headerlink" title="测试时候的设定"></a>测试时候的设定</h3><p>训练完train_datasets之后，model要来测试样本了。在model(test_datasets)之前，需要<strong>加上model.eval()</strong>. 否则的话，<strong>有输入数据，即使不训练，它也会改变权值</strong>。这是model中含有batch normalization层所带来的的性质。</p><p>eval()时，pytorch会自动把BN和DropOut固定住，不会取平均，而是用训练好的值。不然的话，一旦test的batch_size过小，很容易就会被BN层导致生成图片颜色失真极大。</p>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
      <category>PyTorch学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI</tag>
      
      <tag>Pytorch</tag>
      
      <tag>Python</tag>
      
      <tag>神经网络</tag>
      
      <tag>模型训练</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>主成分分析PCA</title>
    <link href="/posts/408/"/>
    <url>/posts/408/</url>
    
    <content type="html"><![CDATA[<p>PCA（Principal components analysis）的思想是构建 n_e <strong>新的独立特征</strong>，这些特征是 n_d 旧特征的<strong>线性组合</strong>，以便这些新特征定义的子空间上的数据投影尽可能接近初始数据（以欧几里得距离表示）。</p><p>换句话说，PCA正在寻找初始空间的<strong>最佳线性子空间</strong>（由新特征的正交基描述），以便通过其在此子空间上的<strong>投影</strong>逼近数据的<strong>误差</strong>尽可能小。</p><img src="/posts/408/PCA.png" class="" title="PCA">]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
      <category>概念记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>降维</tag>
      
      <tag>数据处理</tag>
      
      <tag>特征提取</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>多模态跨模态</title>
    <link href="/posts/2116/"/>
    <url>/posts/2116/</url>
    
    <content type="html"><![CDATA[<h3 id="多模态（multimodal）"><a href="#多模态（multimodal）" class="headerlink" title="多模态（multimodal）"></a>多模态（multimodal）</h3><p>指的是涉及<strong>多种感官模式</strong>（例如视觉、听觉、触觉等）的<strong>信息或输入</strong>。在计算机科学和人工智能领域，多模态系统通常是指使用多种传感器或输入源来捕捉和处理多种感官信息的系统。例如，一个多模态语音识别系统可以同时利用声音信号和嘴部运动图像来提高语音识别的准确性。多模态技术在计算机视觉、自然语言处理、人机交互、机器学习等领域都有广泛的应用。</p><p>目前大多数工作中，只处理<strong>图像和文本</strong>形式的数据，即把视频数据转为图像，把音频数据转为文本格式。</p><p>多模态是把要检索的模态融合起来，做整体的检索，<strong>查询和检索的必须至少有一个模态是相同的</strong>，也就是要查询和检索的模态都已经在融合模态里了。</p><h3 id="跨模态（cross-modal）"><a href="#跨模态（cross-modal）" class="headerlink" title="跨模态（cross-modal）"></a>跨模态（cross-modal）</h3><p>通常是指在多个感官模式之间建立<strong>联系或转换</strong>。跨模态技术可以让不同的感官模式之间进行交互和信息共享，从而实现更高级别的信息处理和分析。例如，将视觉和听觉信息进行跨模态匹配，可以帮助识别音乐视频中的音乐类型和情感状态。跨模态技术也可以应用于自然语言处理中，例如将文本描述转换为图像或视频，或者将图像或视频中的内容转换为自然语言描述。跨模态技术在人工智能、虚拟现实、增强现实、智能交互等领域都有广泛的应用。</p><p>跨模态是检索结果和查询的模态是不同，如图像检索文本，视频和音频。跨模态检索的关键在于对不同模态的关系进行建模，难点就是<strong>语义对齐</strong>。</p>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
      <category>概念记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI</tag>
      
      <tag>modal</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>命令行程序控制</title>
    <link href="/posts/7a22/"/>
    <url>/posts/7a22/</url>
    
    <content type="html"><![CDATA[<table><thead><tr><th>command</th><th>hints</th></tr></thead><tbody><tr><td>Ctrl+C</td><td>停止程序</td></tr><tr><td>Ctrl+Z</td><td>暂停进程并放入后台</td></tr><tr><td>jobs</td><td>显示当前暂停的进程</td></tr><tr><td>bg N</td><td>使第N个任务在后台运行</td></tr><tr><td>fg N</td><td>使第N个任务在前台运行</td></tr><tr><td>bg, fg</td><td>不带 N 时表示对最后一个进程操作</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>学习记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>terminal</tag>
      
      <tag>task</tag>
      
      <tag>process</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DRO</title>
    <link href="/posts/813c/"/>
    <url>/posts/813c/</url>
    
    <content type="html"><![CDATA[<p>DRO（Distributionally Robust Optimization）是一种优化方法，旨在解决数据分布偏移（distribution shift）问题。</p><p>传统的机器学习模型都是基于<strong>训练数据</strong>的经验分布进行优化，但实际应用中，测试数据往往与训练数据的分布有所不同，这会导致模型的性能下降。</p><p>DRO的目标是在优化模型的同时，<strong>考虑测试数据与训练数据分布的偏移</strong>，从而提高模型的鲁棒性。</p><p>DRO的基本思想是在优化目标中加入一个<strong>分布约束</strong>，该约束表示模型在训练数据和测试数据之间应该具有一定的相似性。具体而言，DRO优化的是一个多个分布的凸组合，其中<strong>每个分布</strong>表示训练数据的一个<strong>子集</strong>，而凸组合则表示对所有分布进行<strong>加权平均后得到的一个新的分布</strong>。这样，模型就可以通过最小化经验分布与凸组合之间的距离来同时考虑所有可能的分布偏移情况，从而得到更加鲁棒的模型。</p><p>DRO已经在一些领域取得了成功的应用，例如自然语言处理、计算机视觉、推荐系统等。</p>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
      <category>概念记录</category>
      
      <category>优化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI</tag>
      
      <tag>ML</tag>
      
      <tag>distribution</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>人类反馈学习</title>
    <link href="/posts/926e/"/>
    <url>/posts/926e/</url>
    
    <content type="html"><![CDATA[<p>人类反馈学习（human feedback learning）是一种机器学习方法，它使用人类反馈来指导模型的学习过程。在人类反馈学习中，模型在<strong>完成任务或生成输出后</strong>，会<strong>接收到人类的反馈或指导</strong>，并<strong>根据反馈调整其预测或输出</strong>。这种方法通常用于<strong>监督学习或强化学习</strong>中，可以帮助模型<strong>更快速、更准确地学习任务</strong>，并提高模型的性能和鲁棒性。人类反馈可以采用不同的形式，如<strong>标签、注释、评分、建议</strong>等，也可以通过人机交互的方式进行交互式学习。此外，人类反馈学习还可以通过<strong>集成多个人类反馈</strong>，实现模型的群体学习和协同学习，从而进一步提高模型的性能。人类反馈学习在很多领域都有广泛的应用，如自然语言处理、计算机视觉、智能推荐、机器人学习等。</p>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
      <category>概念记录</category>
      
      <category>机器学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI</tag>
      
      <tag>ML</tag>
      
      <tag>Learning</tag>
      
      <tag>feedback</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>提示学习</title>
    <link href="/posts/5340/"/>
    <url>/posts/5340/</url>
    
    <content type="html"><![CDATA[<p>提示学习（prompt-based learning）是一种机器学习方法，它通过<strong>提供文本或指令来指导模型完成特定的任务或问题</strong>。在提示学习中，模型接收一个问题或任务描述，并使用该描述来生成预测或生成输出。这种方法通常用于语言生成、文本分类、问答系统和语言翻译等自然语言处理任务。与传统的无监督学习或监督学习相比，提示学习更加灵活和高效，因为它可以<strong>通过不同的提示来定制模型的输出</strong>。此外，提示学习还可以利用预训练模型和自适应学习等技术来提高模型的性能和适应性。近年来，提示学习在人工智能领域得到了广泛的应用和关注。其中，OpenAI的GPT系列模型就是使用提示学习方法进行训练的。</p>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
      <category>概念记录</category>
      
      <category>机器学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI</tag>
      
      <tag>ML</tag>
      
      <tag>Learning</tag>
      
      <tag>prompt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>无监督域适应UDA</title>
    <link href="/posts/55a8/"/>
    <url>/posts/55a8/</url>
    
    <content type="html"><![CDATA[<p>UDA，全称为Unsupervised Domain Adaptation，即无监督域适应，是一种机器学习中的技术，用于解决在目标领域中缺乏标记数据的情况下进行有监督学习的问题。</p><p>在有监督学习中，我们通常会有一组标记数据（即有标签的数据），并使用这些数据来训练我们的模型。但在现实中，由于多种原因（例如数据收集成本高昂，标注困难等），我们可能无法获取足够数量的标记数据来训练我们的模型。这时候，就需要使用无监督域适应技术。</p><p>UDA的基本思想是使用已有的标记数据和未标记数据来训练模型。我们先在<strong>源领域</strong>中使用<strong>标记数据训练模型</strong>，然后将该模型应用于<strong>目标领域</strong>中的<strong>未标记数据</strong>，利用目标领域中的数据来<strong>调整模型的参数</strong>，使得模型在目标领域中的性能更好。这种方法的优点是可以<strong>充分利用</strong>目标领域中的未标记数据，从而提高模型的<strong>泛化能力和性能</strong>。</p><p>UDA的一些常见方法包括DANN（Domain Adversarial Neural Networks）、MMD（Maximum Mean Discrepancy）、CORAL（CORrelation ALignment）、CDAN（Conditional Domain Adversarial Networks）等。这些方法基于不同的思想和原理，但它们的共同目标都是通过将源领域和目标领域的分布对齐，使得模型在目标领域中的表现更好。</p>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
      <category>概念记录</category>
      
      <category>机器学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI</tag>
      
      <tag>ML</tag>
      
      <tag>distribution</tag>
      
      <tag>Learning</tag>
      
      <tag>Adaptation</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>无监督学习与数据增强UDA</title>
    <link href="/posts/2a86/"/>
    <url>/posts/2a86/</url>
    
    <content type="html"><![CDATA[<p>Unsupervised Data Augmentation（UDA）是一种用于无监督学习的数据增强技术。它可以帮助我们更好地利用未标记数据，提高模型的泛化能力。</p><p>当我们使用监督学习训练模型时，通常需要大量的标记数据。然而，标记数据的获取和标注成本很高，而且有时可能无法覆盖整个数据分布。这就导致了一个问题：如何在没有<strong>足够的标记数据</strong>的情况下训练具有良好泛化能力的模型？</p><p>一种解决方案是使用无监督学习和数据增强来利用未标记数据。数据增强技术可以生成大量的虚拟数据，从而增加训练数据的多样性，而无监督学习则可以使用未标记数据进行自学习，从而减少对标记数据的依赖。</p><p>Unsupervised Data Augmentation（UDA）将这两个技术结合起来，使用数据增强技术生成<strong>虚拟数据</strong>，并使用无监督学习方法自学习。其基本思想是：</p><ol><li>使用一个自监督模型，如自编码器、生成对抗网络等，对未标记数据进行自学习。</li><li>使用数据增强技术，如旋转、翻转、剪切等操作，生成多样的虚拟数据。</li><li>将虚拟数据和自监督模型生成的标签一起用于训练模型，以提高模型的泛化能力。</li></ol><p>UDA有许多不同的变体，但它们的核心思想都是相似的。例如，MixMatch和FixMatch是两种UDA方法，它们都使用了数据增强和自监督学习。MixMatch使用了多个不同的数据增强操作和标签平滑技术，而FixMatch使用了一个强制匹配策略和一个弱监督的学习过程，以更好地利用未标记数据。</p><p>UDA已经在许多领域中被证明是有效的，如计算机视觉、自然语言处理等。通过结合无监督学习和数据增强技术，UDA可以利用更多的未标记数据，提高模型的性能，并减少对标记数据的依赖。</p>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
      <category>概念记录</category>
      
      <category>机器学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI</tag>
      
      <tag>数据处理</tag>
      
      <tag>ML</tag>
      
      <tag>Learning</tag>
      
      <tag>数据增强</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Dropout</title>
    <link href="/posts/b5d6/"/>
    <url>/posts/b5d6/</url>
    
    <content type="html"><![CDATA[<p>Dropout是一种正则化技术，用于在神经网络的训练过程中<strong>减少过拟合</strong>。它在每次训练迭代中<strong>随机丢弃</strong>一些神经元，从而降低它们对特定输入的依赖性，并增加网络的泛化能力。</p><p>具体来说，Dropout将每个神经元的输出以概率p（通常为0.5）设置为0，这意味着该神经元在该迭代中不会对前向传递的输出进行贡献。在反向传播期间，只有那些没有被设置为0的神经元才会更新其权重。这使得神经元不能过分依赖其它神经元的输出，从而防止过拟合。</p><p>使用Dropout时，通常在<strong>训练阶段启用</strong>它，在<strong>测试阶段禁用</strong>它。这是因为在测试阶段，我们希望使用整个网络来进行预测，而不是对每个神经元都进行随机丢弃。在PyTorch中，可以使用<code>nn.Dropout</code>模块来添加Dropout层，例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">dropout = nn.Dropout(p=<span class="hljs-number">0.5</span>) <span class="hljs-comment"># 创建一个丢弃概率为0.5的Dropout层</span><br>x = dropout(x) <span class="hljs-comment"># 对输入进行Dropout</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
      <category>概念记录</category>
      
      <category>神经网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>神经网络</tag>
      
      <tag>正则化</tag>
      
      <tag>overfitting</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>卷积反卷积计算</title>
    <link href="/posts/775/"/>
    <url>/posts/775/</url>
    
    <content type="html"><![CDATA[<h3 id="卷积"><a href="#卷积" class="headerlink" title="卷积"></a>卷积</h3><p>输入图片大小  $W\times W$</p><p>kernel 卷积核大小 $K\times K$</p><p>stride 步长  $S$</p><p>padding 的像素数 $P$</p><p>于是我们可以得出计算公式为：</p><p>$N &#x3D; (W − K + 2P )&#x2F;S+1$</p><h3 id="反卷积"><a href="#反卷积" class="headerlink" title="反卷积"></a>反卷积</h3><p>输入图片大小 $W\times W$</p><p>kernel 卷积核大小 $K\times K$</p><p>stride 步长 $S$</p><p>padding 的像素数 $P$</p><p>output_padding 周边补充像素数</p><p>于是我们可以得出计算公式为：</p><p>$N &#x3D; S(W-1)+K-2P+output_padding$</p>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
      <category>概念记录</category>
      
      <category>神经网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI</tag>
      
      <tag>神经网络</tag>
      
      <tag>CNN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>超网络</title>
    <link href="/posts/c64/"/>
    <url>/posts/c64/</url>
    
    <content type="html"><![CDATA[<p>超网络（Meta-network）是一种神经网络结构，用于生成其他神经网络的权重或结构。通常情况下，超网络<strong>自身也是一个神经网络</strong>，其输入是一个或多个<strong>描述目标网络结构的参数或超参数</strong>，输出是<strong>目标网络的权重或结构</strong>。</p><p>在训练阶段，超网络接收一个目标网络的结构描述，例如层数、节点数、卷积核大小等超参数，然后使用这些超参数来生成目标网络的权重。通过在目标任务上对生成的网络进行训练，可以优化超网络的参数，使其能够生成更优秀的目标网络。</p><p>超网络可以用于自动设计神经网络的结构或者对神经网络进行架构搜索，从而实现更好的模型性能。此外，超网络还可以用于<strong>模型压缩</strong>和加速等应用，通过生成轻量级的模型来满足不同场景的需求。</p>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
      <category>概念记录</category>
      
      <category>神经网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI</tag>
      
      <tag>神经网络</tag>
      
      <tag>模型训练</tag>
      
      <tag>model</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>激活函数</title>
    <link href="/posts/7401/"/>
    <url>/posts/7401/</url>
    
    <content type="html"><![CDATA[<p>激活函数本质是向神经网络中<strong>引入非线性因素</strong>，通过激活函数，神经网络可以<strong>拟合各种曲线</strong>。如果不用激活函数，每一层输出都会是上一层输入的线性函数，引入非线性函数作为激活函数，输出将可以<strong>逼近任意函数</strong>。</p><h3 id="Sigmoid"><a href="#Sigmoid" class="headerlink" title="Sigmoid"></a>Sigmoid</h3><p><strong>公式</strong>：$f(x)&#x3D;\frac{1}{1+e^{-x}}$ </p><p><strong>梯度</strong>：$f’(x)&#x3D;\frac{e^{-x}}{(1+e^{-x})^2}&#x3D;\frac{1}{1+e^{-x}}-(\frac{1}{1+e^{-x}})^2&#x3D;f(x)-f^2(x)$</p><p><strong>图像以及梯度图像</strong>：</p><img src="/posts/7401/sigmoid.png" class="" title="sigmoid"><p>Sigmoid函数的输出<strong>值域在0到1之间</strong>，具有连续可导、单调递增的性质。但是，当输入值较大或较小的时候，Sigmoid函数的梯度会趋近于0，导致<strong>梯度消失</strong>的问题，从而影响模型的训练效果。而且，Sigmoid函数的输出恒为正值，不是以零为中心的，这会导致权值更新时只能朝一个方向更新，从而<strong>影响收敛速度</strong>。</p><p>一般Sigmoid函数只用于<strong>二分类的输出层</strong>。</p><h3 id="ReLU"><a href="#ReLU" class="headerlink" title="ReLU"></a>ReLU</h3><p><strong>公式</strong>：$f(x) &#x3D; max(0, x)$ </p><p><strong>梯度</strong>：$f’(x)&#x3D;\begin{cases}0,&amp;x&lt;0\1,&amp;x&gt;0 \end{cases}$</p><p><strong>函数图像</strong>：</p><img src="/posts/7401/relu.png" class="" title="ReLU"><p>ReLU是一种常用的激活函数，ReLU提出就是为了解决梯度消失问题。它将输入值在<strong>负数区域输出0</strong>，在<strong>正数区域输出该数值</strong>本身。</p><p>ReLU函数具有以下几个优点：</p><ol><li>加速收敛：ReLU函数的导数在输入大于0时恒等于1，使得网络的<strong>反向传播更加稳定</strong>，可以加速模型的训练。</li><li>稀疏性：ReLU函数的输出值在负数区域恒等于0，可以使得网络的隐藏层的神经元出现稀疏性，进一步<strong>减少计算量和存储空间</strong>。</li><li>解决梯度消失问题：在较深的网络结构中，使用Sigmoid或tanh等激活函数容易导致梯度消失的问题，而ReLU可以有效地避免这个问题。</li></ol><p>ReLU函数在深度学习中得到广泛应用，但是它也存在一些问题，例如输出为0的区域梯度为0，这会导致<strong>梯度更新停止</strong>，进而导致<strong>神经元“死亡”</strong>的问题。因此，一些变种的ReLU函数被提出，例如Leaky ReLU和ELU等。</p><h3 id="LeakyReLU"><a href="#LeakyReLU" class="headerlink" title="LeakyReLU"></a>LeakyReLU</h3><p><strong>公式</strong>：$f(x)&#x3D;\begin{cases} x, &amp; x&gt;0 \ \alpha x, &amp; x\leq 0 \end{cases}$ </p><p><strong>梯度</strong>：$f’(x)&#x3D;\begin{cases} 1, &amp; x&gt;0 \ \alpha , &amp; x\leq 0 \end{cases}$</p><p><strong>图像如下</strong>：</p><img src="/posts/7401/leakyrelu.png" class="" title="LeakyReLU"><p>LeakyReLU的提出就是为了解决神经元”死亡“问题，LeakyReLU与ReLU很相似，仅在输入小于0的部分有差别，ReLU输入小于0的部分值都为0，而LeakyReLU输入小于0的部分，值为负，且有微小的梯度，从而增加模型的<strong>稳定性</strong>。实际中，LeakyReLU的α取值一般为<strong>0.01</strong>。</p><p>超参数α的取值也已经被很多实验研究过，有一种取值方法是 对α随机取值，α的分布满足均值为0,标准差为1的正态分布，该方法叫做<strong>随机LeakyReLU</strong>(Randomized LeakyReLU)。原论文指出随机LeakyReLU相比LeakyReLU能得更好的结果，且给出了参数α的经验值<strong>1&#x2F;5.5</strong>(好于0.01)。至于为什么随机LeakyReLU能取得更好的结果，解释之一就是随机LeakyReLU小于0部分的随机梯度，为优化方法引入了随机性，这些随机噪声可以帮助参数取值跳出局部最优和鞍点。正是由于α的取值至关重要，人们不满足与随机取样α，有论文将α作为了需要学习的参数，该激活函数为<strong>PReLU</strong>(Parametrized ReLU)。</p><h3 id="Tanh"><a href="#Tanh" class="headerlink" title="Tanh"></a>Tanh</h3><p><strong>公式</strong>：$f(x)&#x3D;\frac{e^x-e^{-x}}{e^x+e^{-x}}$ </p><p><strong>梯度</strong>：</p><p><strong>图像</strong>：</p><img src="/posts/7401/tanh.png" class="" title="Tanh"><p>Tanh函数的优点在于它的<strong>输出值在[-1, 1]<strong>之间，比Sigmoid函数的输出范围更广，因此可以更好地避免梯度消失问题，当输入的值趋于正无穷或负无穷时，tanh的梯度同样会趋近零，造成</strong>梯度消失</strong>。与Sigmoid函数相似，Tanh函数也具有Sigmoid函数的非线性特性，能够帮助模型学习<strong>非线性关系</strong>。同时，Tanh函数也具有零均值，这使得其收敛速度比Sigmoid快，也可以对数据进行中心化。</p><p>在深度学习中，Tanh函数通常作为激活函数使用在<strong>隐藏层</strong>中，而不是输出层中，因为输出层通常需要正值或者是概率。</p><h3 id="Softmax"><a href="#Softmax" class="headerlink" title="Softmax"></a>Softmax</h3><p><strong>公式</strong>：$f(x_i)&#x3D;\frac{e^{x_i}}{\sum_{j}e^{x_j}}$</p><p><strong>梯度</strong>：$\frac{\partial f(x_i)}{\partial x_i}<br>&#x3D;\frac{e^{x_i}\sum_{j}e^{x_j}-e^{x_i}e^{x_i}}{(\sum_{j}e^{x_j})^2}<br>&#x3D;\frac{e^{x_i}}{\sum_{j}e^{x_j}}(1-\frac{e^{x_i}}{\sum_{j}e^{x_j}})<br>&#x3D;f(x_i)(1-f(x_i))$</p><p>Softmax常用于<strong>多分类</strong>问题中，他是二分类函数Sigmoid在多分类上的推广，目的是将多分类的结果<strong>以概率的形式</strong>展现出来，同时，可以将为负值的输出转化为正的概率值。它将一个K维的向量（K为类别数量）映射到一个概率分布上，使得每个元素的取值在0和1之间，而且它们的<strong>和等于1</strong>。</p><p>Softmax函数的输出具有归一化性质，即各个类别的概率和为1。因此，在进行多分类问题时，输入数据需要进行one-hot编码，而在计算损失时，使用交叉熵损失函数。</p><h3 id="ELU-Exponential-Linear-Unit"><a href="#ELU-Exponential-Linear-Unit" class="headerlink" title="ELU(Exponential Linear Unit)"></a>ELU(Exponential Linear Unit)</h3><p><strong>公式</strong>：$f(x)&#x3D;\begin{cases}x,&amp;x&gt;0\\alpha(e^x-1),&amp;x&lt;0\end{cases}$</p><p><strong>梯度</strong>：$f’(x)&#x3D;\begin{cases}1,&amp;x&gt;0\\alpha e^x,&amp;x&lt;0\end{cases}$</p><p><strong>图像</strong>：</p><img src="/posts/7401/ELU.png" class="" title="ELU"><p>输入大于0部分的梯度为1,输入小于0的部分无限趋近于-α，超参数取值一般为1.<br>ELU相比于ReLU和LeakyReLU的优点在于：</p><ol><li>对于负数的输出，ELU可以使梯度<strong>不会变得太小</strong>，因为当x小于0 时，导数会趋近于0而不是被截断为一个常数值。</li><li>当x的值较大时，ELU仍然可以保持一个较大的导数，从而<strong>加速学习过程</strong>。</li></ol><p>但是，ELU的缺点在于，<strong>计算复杂度</strong>比ReLU和LeakyReLU高，因为它涉及到指数运算。<br>总的来说，如果网络需要处理的数据集有很多负数，或者你需要防止梯度消失或爆炸，那么可以尝试使用ELU。</p><h3 id="选择方式"><a href="#选择方式" class="headerlink" title="选择方式"></a>选择方式</h3><p><strong>隐藏层：</strong></p><ol><li>优先选择ReLu函数，如果效果不好，尝试其他，比如LeakyReLu；</li><li>不要使用Sigmoid函数，可以尝试Tanh函数。</li></ol><p><strong>输出层：</strong></p><ol><li>二分类问题选择Sigmoid函数；</li><li>多分类问题选择Softmax函数；</li><li>回归问题选择Identity函数。$（f(x)&#x3D;x）$</li></ol>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
      <category>概念记录</category>
      
      <category>神经网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI</tag>
      
      <tag>神经网络</tag>
      
      <tag>模型训练</tag>
      
      <tag>激活函数</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从零开始使用服务器</title>
    <link href="/posts/f111/"/>
    <url>/posts/f111/</url>
    
    <content type="html"><![CDATA[<blockquote><p>进入实验室，分配到服务器用户名和密码，记录一下配置过程</p></blockquote><h3 id="服务器信息"><a href="#服务器信息" class="headerlink" title="服务器信息"></a>服务器信息</h3><p>在用户文件夹下的 .ssh 文件夹下的config文件中，保存服务器信息</p><pre><code class="hljs">Host aliasHostName hostnameUser userPort port</code></pre><p>系统：Linux<br>硬盘空间：系统盘，数据盘</p><ul><li>&#x2F;home 下的用户名文件夹是系统盘下个人空间</li><li>&#x2F;data 下的用户名文件夹是数据盘下个人空间</li></ul><h3 id="服务器连接"><a href="#服务器连接" class="headerlink" title="服务器连接"></a>服务器连接</h3><p>喜欢使用VSCode连接，可以一边看文件，一边在终端执行操作</p><ol><li>只需要在VSCode插件市场搜索Remote Development进行安装，就会安装一系列连接服务器需要的插件<img src="/posts/f111/plugin.png" class="" title="image.png"></li><li>左边会出现<strong>远程资源管理器</strong>栏目<img src="/posts/f111/source.png" class="" title="image.png">，左下角会出现<strong>打开远程窗口</strong>按钮<img src="/posts/f111/remote.png" class="" title="image.png"></li><li>点击按钮即可按照要求进行连接。如果按照上一节保存了信息，只需要选择对应的服务器，输入密码即可。</li><li>初次连接资源管理器是空的，可以打开自己的文件夹，要添加更多文件夹，可以右键资源管理器的空白处添加文件夹到工作区。</li></ol><h3 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h3><h4 id="结构安排"><a href="#结构安排" class="headerlink" title="结构安排"></a>结构安排</h4><p>为了不影响使用的速度，存储性的功能放在数据盘，只在系统盘保留软件安装和正在使用的项目代码，架构图如下：系统盘存放项目和软件，数据盘存放数据集，模型以及实验结果</p><img src="/posts/f111/tree.png" class="" title="image.png"> <h4 id="conda安装"><a href="#conda安装" class="headerlink" title="conda安装"></a>conda安装</h4><p>首先下载安装包到服务器，进入到想下载的地方之后，可以使用wget命令，这里进入到softwares文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 浙大源，内网超级快</span><br>wget https://mirror.zju.edu.cn/anaconda/archive/Anaconda3-2023.09-0-Linux-x86_64.sh<br><span class="hljs-comment"># 官网，超级慢</span><br>wget https://repo.anaconda.com/archive/Anaconda3-2023.09-0-Linux-x86_64.sh<br></code></pre></td></tr></table></figure><p>运行安装包，名字好长，可以通配符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash Ana*.sh<br></code></pre></td></tr></table></figure><p>回车开始阅读协议，空格下翻，输入<code>yes</code>同意协议<br>可以输入自定义安装目录，为了便于管理，这里选择安装在<code>/softwares/anaconda3</code>文件夹下<br>安装完成之后开始配置，根据需求自行选择，回到<strong>用户目录</strong>执行下面命令，初始化命令行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><p>安装完成，检查是否成功，显示版本信息，就是成功了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda --version<br></code></pre></td></tr></table></figure><p>然后进行换源以实现加速</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 开始没有配置文件，执行下面命令生成，会位于用户根目录下</span><br>conda config --<span class="hljs-built_in">set</span> show_channel_urls <span class="hljs-built_in">yes</span><br><span class="hljs-comment"># 此时已经生成 .condarc，我们打开它</span><br>code .condarc<br><span class="hljs-comment"># 修改内容为以下内容</span><br>channels:<br>  - defaults<br>show_channel_urls: <span class="hljs-literal">true</span><br>default_channels:<br>  - https://mirrors.zju.edu.cn/anaconda/pkgs/main<br>  - https://mirrors.zju.edu.cn/anaconda/pkgs/r<br>  - https://mirrors.zju.edu.cn/anaconda/pkgs/msys2<br>custom_channels:<br>  conda-forge: https://mirrors.zju.edu.cn/anaconda/cloud<br>  msys2: https://mirrors.zju.edu.cn/anaconda/cloud<br>  bioconda: https://mirrors.zju.edu.cn/anaconda/cloud<br>  menpo: https://mirrors.zju.edu.cn/anaconda/cloud<br>  pytorch: https://mirrors.zju.edu.cn/anaconda/cloud<br>  pytorch-lts: https://mirrors.zju.edu.cn/anaconda/cloud<br>  simpleitk: https://mirrors.zju.edu.cn/anaconda/cloud<br></code></pre></td></tr></table></figure><p>为了避免环境占用过多系统盘资源，将环境移动到数据盘</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看conda信息，envs directories表示当前环境存储位置</span><br>conda info<br><span class="hljs-comment"># 在.condarc末尾增加以下内容</span><br>envs_dirs:<br>  - /data/yuqihang/envs/envs<br>pkgs_dirs:<br>  - /data/yuqihang/envs/pkgs<br></code></pre></td></tr></table></figure><p>其余配置参考<a href="../Windows%E7%9B%B8%E5%85%B3/Anaconda%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8.md">Anaconda下载安装与使用</a>]</p><h4 id="git配置"><a href="#git配置" class="headerlink" title="git配置"></a>git配置</h4><p>git已经预安装，只需要配置一下连接到自己的远程仓库即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;Yu-Qi-hang&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;2659464450@qq.com&quot;</span><br>ssh-keygen -t rsa -C <span class="hljs-string">&quot;2659464450@qq.com&quot;</span><br></code></pre></td></tr></table></figure><p>执行之后一直回车即可，此时已经生成了公钥文件在<code>~/.ssh/id_rsa.pub</code>，参考<a href="..%5CWindows%E7%9B%B8%E5%85%B3%5CGit%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8AGithub%E8%BF%9E%E6%8E%A5%E6%9C%AC%E5%9C%B0.md">Git安装以及Github连接本地</a>连接并验证 </p><h3 id="命令速查"><a href="#命令速查" class="headerlink" title="命令速查"></a>命令速查</h3><p>查看服务器的系统：uname -a</p><p>查看显卡当前状态：nvidia-smi</p><p>持续监控显卡状态：watch nvidia-smi</p><p>程序执行指定CPU：taskset -c 1 python main.py</p><p>程序执行指定GPU：</p><p>下载某个链接的文件：wget –user 《可能需要的用户名》 –password 《可能需要的密码》 《链接》</p><p>后台运行指令：nohup 《原指令》&gt; 《输出信息的文件》 2&gt;&amp;1 &amp;</p>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>学习记录</category>
      
      <category>服务器管理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>server</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>变分自编码器VAE</title>
    <link href="/posts/ad84/"/>
    <url>/posts/ad84/</url>
    
    <content type="html"><![CDATA[<p>变分自编码器（Variational Auto-Encoder，VAE），希望构建一个从 <strong>隐变量Z</strong> 生成 <strong>目标数据X</strong> 的模型。更准确地讲，VAE是一个自动编码器，其编码分布在训练期间被正则化（正态分布），训练一个模型 $X&#x3D;g(Z)$，这个模型能够将原来的概率分布映射到训练集的概率分布，以确保其潜在空间具有良好的属性，使我们能够生成一些新数据。 </p><h3 id="AE"><a href="#AE" class="headerlink" title="AE"></a>AE</h3><p>encoder：从“旧特征”表示生成“新特征”表示，降维</p><p>decoder：encoder相反</p><img src="/posts/ad84/Encoder_Decoder.png" class="" title="image-1"><p>找到一组最合适的编码解码器使得重建的数据与原始数据误差测量最小。</p><p>$$loss &#x3D; \parallel{x-\hat{x}}\parallel^{2}&#x3D;\parallel{x-d(z)}\parallel^{2}&#x3D;\parallel{x-e(d(x))}\parallel^{2}$$</p><p>将编码器和解码器设置为<strong>神经网络</strong>并使用迭代优化过程学习最佳编码-解码方案，在每次迭代中，我们都会向<strong>Auto-Encoder</strong>架构（编码器后跟解码器）提供一些数据，我们将编码-解码输出与初始数据进行比较，并通过架构<strong>反向传播</strong>误差以更新网络的权重。</p><p>一旦自动编码器被训练，我们既有编码器又有解码器，但仍然没有真正的方法来产生任何<strong>新内容</strong>。乍一看，我们可能会认为，如果<strong>潜在空间足够规则</strong>（在训练过程中由编码器很好地“组织”），我们可以从该潜在空间中随机获取一个点并对其进行解码以获得新内容。然后，解码器的行为或多或少类似于生成对抗网络的生成器。然而，自动编码器的潜在空间的规律性是一个难题，它取决于初始空间中数据的分布、潜在空间的维度和编码器的架构。</p><img src="/posts/ad84/latent_space.png" class="" title="image-2"><h3 id="VAE"><a href="#VAE" class="headerlink" title="VAE"></a>VAE</h3><p>为了能够将自动编码器的解码器用于<strong>生成目的</strong>，我们必须确保潜在空间足够规则。获得这种规律性的一种可能的解决方案是在训练过程中引入<strong>明确的正则化</strong>。因此，变分自编码器可以定义为一个自动编码器，其训练被正则化以避免过度拟合并确保潜在空间具有良好的属性，从而实现生成过程。</p><p>为了引入一些潜在空间的正则化，我们对编码-解码过程进行了轻微的修改：我们不是将输入编码为单个点，而是将其<strong>编码为潜在空间上的分布</strong>。</p><ol><li>首先，将输入编码为在潜在空间上的<strong>分布</strong></li><li>其次，从该分布中<strong>采样</strong>来自潜在空间的点</li><li>第三，对采样点进行<strong>解码</strong>并计算重建误差</li><li>最后，<strong>重建误差</strong>通过网络反向传播</li></ol><img src="/posts/ad84/data_flow.png" class="" title="image-3"><p>编码分布被选择为<strong>正态分布</strong>，以便可以训练编码器返回描述这些高斯的<strong>均值和协方差矩阵</strong>。我们以这种方式确保潜在空间的局部和全局正则化（局部因为方差控制，全局因为均值控制）。</p><p>训练VAE时最小化的损失函数由“重建项”（在最后一层）和“正则化项”（在潜伏层上）组成，前者倾向于使编码-解码方案尽可能<strong>高性能</strong>，后者通过使编码器返回的分布<strong>接近标准正态分布</strong>来正则化潜在空间的组织。</p><img src="/posts/ad84/VAE_loss.png" class="" title="image-4"><p>$$loss &#x3D; \parallel{x-\hat{x}}\parallel^{2}+KL[N(\mu_{x},\sigma_{x}),N(0,1)]&#x3D;\parallel{x-d(z)}\parallel^{2}+KL[N(\mu_{x},\sigma_{x}),N(0,1)]$$</p><p>为了使生成过程成为可能而期望从潜在空间获得的规律性可以通过两个主要属性来表示：<strong>连续性</strong>（潜在空间中的两个接近点在解码后不应给出两个完全不同的内容）和<strong>完整性</strong>（对于选定的分布，从潜在空间采样的点在解码后应该给出“有意义的”内容）。</p><img src="/posts/ad84/latent_sample.png" class="" title="image-5"><p>通过正则化项，我们可以满足预期的连续性和完整性条件，但这是以训练数据上更高的重建误差为代价的。然而，重建误差和KL散度之间的权重是可以调整的。</p><img src="/posts/ad84/reparameter.png" class="" title="image-6"><p>$$loss &#x3D; C\parallel{x-\hat{x}}\parallel^{2}+KL[N(\mu_{x},\sigma_{x}),N(0,1)]&#x3D;C\parallel{x-f(z)}\parallel^{2}+KL[N(g(x),h(x))),N(0,1)]$$</p>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
      <category>概念记录</category>
      
      <category>生成模型</category>
      
      <category>VAE</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI</tag>
      
      <tag>神经网络</tag>
      
      <tag>distribution</tag>
      
      <tag>model</tag>
      
      <tag>VAE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>条件变分自编码器CVAE</title>
    <link href="/posts/276c/"/>
    <url>/posts/276c/</url>
    
    <content type="html"><![CDATA[<p>CVAE是一种条件变分自编码器（Conditional Variational Autoencoder）模型，它是基于<a href="%E5%8F%98%E5%88%86%E8%87%AA%E7%BC%96%E7%A0%81%E5%99%A8VAE.md">变分自编码器VAE</a>的一个变种。CVAE能够将外部给定的<strong>条件信息</strong>（如类别标签）融合到潜在空间中的分布中，从而实现对生成样本的控制。相比于传统的VAE模型，CVAE在学习过程中引入了额外的条件信息，并通过在生成器和判别器中添加相应的条件特征，来实现对条件信息的利用。</p><p>具体来说，在CVAE模型中，给定一个条件信息y和输入数据x，模型的目标是学习到一个潜在变量z的后验分布$q(z|x, y)$和生成分布$p(x|z, y)$。与传统的VAE模型类似，CVAE模型也包含了编码器和解码器两个部分。编码器将输入数据和条件信息映射到潜在变量的分布中，即$q(z|x, y)$；解码器则将潜在变量和条件信息映射到生成数据的分布中，即$p(x|z, y)$。</p><p>在CVAE模型的训练中，除了原来的重构误差和KL散度项之外，还需要考虑<strong>条件信息的损失</strong>。常用的条件信息损失包括<strong>分类损失和辅助信息损失</strong>。分类损失用于学习条件信息的判别能力，而辅助信息损失则通过引入额外的监督信息，帮助CVAE模型更好地学习到数据的潜在特征。</p><p>总体来说，CVAE模型可以通过引入条件信息，来实现对生成样本的控制，从而更好地适应实际应用场景。</p>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
      <category>概念记录</category>
      
      <category>生成模型</category>
      
      <category>VAE</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI</tag>
      
      <tag>神经网络</tag>
      
      <tag>distribution</tag>
      
      <tag>model</tag>
      
      <tag>VAE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>StackGAN</title>
    <link href="/posts/2a1/"/>
    <url>/posts/2a1/</url>
    
    <content type="html"><![CDATA[<p>StackGAN（Stacked Generative Adversarial Networks）是一种生成对抗网络（GAN）模型，由中国香港科技大学的Han Zhang等人在2017年提出。StackGAN是一种多尺度图像生成模型，可以生成高分辨率的真实感图像。</p><p>StackGAN的网络结构包括<strong>两个生成器网络</strong>和<strong>两个判别器网络</strong>，其中第一个生成器网络用于<strong>生成低分辨率</strong>的图像，第二个生成器网络则用于将<strong>低分辨率图像转换成高分辨率</strong>的真实感图像。而两个判别器网络则用于区分生成的图像与真实的图像之间的差异。</p><p>为了提高模型的性能，StackGAN还使用了条件变分自编码器（conditional variational autoencoder，CVAE）和循环一致性损失（cycle consistency loss）等技术。CVAE可以通过潜在向量和条件信息来生成<strong>高质量的图像</strong>，而循环一致性损失则可以确保生成的图像与真实图像之间的<strong>转换是可逆的</strong>。</p><p>StackGAN可以应用于许多领域，如计算机视觉、图像处理、虚拟现实等。它可以生成高质量、高分辨率的真实感图像，具有很高的应用价值。</p>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
      <category>概念记录</category>
      
      <category>生成模型</category>
      
      <category>生成对抗网络GAN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI</tag>
      
      <tag>神经网络</tag>
      
      <tag>model</tag>
      
      <tag>GAN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>生成对抗网络</title>
    <link href="/posts/94dc/"/>
    <url>/posts/94dc/</url>
    
    <content type="html"><![CDATA[<p><strong>GAN</strong>指的是生成对抗网络（Generative Adversarial Networks），是由伊恩·古德费洛等人于2014年提出的一种<strong>深度学习模型</strong>，用于生成<strong>逼真的新数据</strong>，如图像、音频、视频等。</p><p>GAN由两个神经网络组成：<strong>生成器网络</strong>和<strong>判别器网络</strong>。</p><ol><li>生成器网络通过<strong>学习真实数据的分布</strong>，生成伪造的数据。</li><li>判别器网络则用于<strong>区分生成的数据和真实的数据</strong>，并将其分类为真实数据或伪造数据。</li></ol><p>在训练过程中，生成器和判别器网络<strong>相互博弈</strong>，生成器网络通过<strong>反向传播</strong>算法不断优化生成的数据，使其更接近真实数据的分布；判别器网络也通过<strong>反向传播</strong>算法不断优化对生成的数据和真实数据的分类准确度。</p><p>GAN的一个主要优点是可以生成逼真的数据，具有很高的创造性和想象力，可以用于许多领域，如计算机视觉、自然语言处理、音频处理等。GAN也有一些变体，如DCGAN（Deep Convolutional GAN）、WGAN（Wasserstein GAN）等，它们通过改进GAN的结构和算法，进一步提高了GAN的性能和稳定性。</p>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
      <category>概念记录</category>
      
      <category>生成模型</category>
      
      <category>生成对抗网络GAN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI</tag>
      
      <tag>神经网络</tag>
      
      <tag>model</tag>
      
      <tag>GAN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>StarGAN</title>
    <link href="/posts/70cf/"/>
    <url>/posts/70cf/</url>
    
    <content type="html"><![CDATA[<p>StarGAN（Star Generative Adversarial Networks）是一种生成对抗网络（GAN）模型，由韩国KAIST大学的Yunjey Choi等人在2018年提出。StarGAN是一种<strong>多域图像转换模型</strong>，它可以<strong>将输入图像转换为多个目标域的图像</strong>。与传统的单一域的图像转换模型不同，StarGAN可以处理多个领域的图像转换，例如将马转换成斑马、将男性转换成女性等。这种多域图像转换可以通过一个<strong>统一的生成器网络</strong>来实现，使得模型更加简单和高效。</p><p>StarGAN的网络结构包括<strong>一个生成器网络</strong>和<strong>一个判别器网络</strong>。生成器网络通过<strong>输入一张源域图像和目标域的标签</strong>，生成一张目标域的图像。而判别器网络则用于区分生成的图像与真实的目标域图像之间的差异。为了提高模型的性能，StarGAN还使用了<strong>循环一致性损失</strong>（cycle consistency loss）和<strong>域一致性损失</strong>（domain consistency loss）等技术，使得生成的图像与真实图像之间的转换更加准确和自然。</p><p>StarGAN可以应用于许多领域，例如计算机视觉、图像处理、虚拟现实等。它不仅可以用于图像转换，还可以用于音频、视频等多种类型的跨域数据转换。</p>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
      <category>概念记录</category>
      
      <category>生成模型</category>
      
      <category>生成对抗网络GAN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI</tag>
      
      <tag>神经网络</tag>
      
      <tag>model</tag>
      
      <tag>GAN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/posts/3eeb/"/>
    <url>/posts/3eeb/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>$$<br>\lim_{x\rightarrow 0^{+}}{\frac{1}{x^{a}}}<br>$$</p><p>$\lim_{x\rightarrow 0^{+}}{\frac{1}{x^{a}}}$</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><img src="/posts/3eeb/about.png" class="" title="image-20230219204217865"><h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><iframe src="//player.bilibili.com/player.html?aid=990700650&bvid=BV1cx4y1M7ci&cid=975414937&page=1" scrolling="no" border="0" allowfullscreen="true"> </iframe><h3 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h3><pre><code class=" mermaid">graph LRA(test)--&gt;B(result);A--&gt;C(return);</code></pre><p><a href="https://yu-qi-hang.github.io/posts/4a17b156/">切换主题</a></p>]]></content>
    
    
    <categories>
      
      <category>test</category>
      
    </categories>
    
    
    <tags>
      
      <tag>test</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AddThis分享文章</title>
    <link href="/posts/3aa1/"/>
    <url>/posts/3aa1/</url>
    
    <content type="html"><![CDATA[<p>Next中集成了 <code>AddThis Share</code> ，但是需要进行配置。</p><p>下面是配置的步骤。</p><ol><li>来到 <a href="https://www.addthis.com/">Addthis 官网</a> 完成注册。</li><li>选择工具选择 <code>Share Buttons</code> <span id="more"></span><img src="/posts/3aa1/button.png" class="" title="image-20230214131030077"></li><li>选择一种工具类型，一共有七种样式，我选择 <code>Expanding</code> ，然后 continue。</li><li>四个栏目分别设置分享的目标，颜色，分享按钮位置以及隐藏分享的页面，配置完成。</li><li>获取配置所需ID，也就是模糊部分 <img src="/posts/3aa1/id.png" class="" title="image-20230214132749541"></li><li>点击定位规则添加定位规则配置，配置设备，博客地址，名字以及隐藏的页面<img src="/posts/3aa1/settings.png" class="" title="image-20230214133816494"> <img src="/posts/3aa1/more_settings.png" class="" title="image-20230214133905902"></li><li>打开主题配置文件，将刚刚的pubid配置到 <code>add_this_id</code> 。</li></ol><p>完成了，但是好像不太好用，不会自动唤起QQ和微信，还需要扫码之类，太麻烦了，去掉了。</p><p>参考：<a href="https://jasonssun.github.io/2019/06/15/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98%E4%B9%8BAddThis%E5%88%86%E4%BA%AB%E6%96%87%E7%AB%A0%E7%9A%84%E9%85%8D%E7%BD%AE/">Hexo搭建博客NexT主题之AddThis分享文章的配置</a></p>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>捣鼓记录</category>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Next</tag>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>指定页面侧边栏不显示目录</title>
    <link href="/posts/66a1/"/>
    <url>/posts/66a1/</url>
    
    <content type="html"><![CDATA[<h3 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h3><p>由于添加的小记页面是自建的page，所以会显示目录，但是从功能考虑并不需要目录。于是考虑删除该页面的目录部分。</p><span id="more"></span><h3 id="二、实现"><a href="#二、实现" class="headerlink" title="二、实现"></a>二、实现</h3><p>我的next版本为8.x，其余版本可能略有不同。</p><p>打开文件 <code>themes/next/layout/_macro/sidebar.njk</code> ，可以找到如下代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">&#123;%- set display_toc = toc<span class="hljs-selector-class">.length</span> &gt; <span class="hljs-number">1</span> and display_toc%&#125;<br></code></pre></td></tr></table></figure><p>这是出现目录的判断条件，我们额外增加一个条件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">&#123;%- set display_toc = toc<span class="hljs-selector-class">.length</span> &gt; <span class="hljs-number">1</span> and display_toc and not page<span class="hljs-selector-class">.notoc</span>%&#125;<br></code></pre></td></tr></table></figure><p>增加的部分意思是 <code>page.notoc</code> 不为 <code>true</code> 时才会出现目录。所以我们在需要关闭目录的文件的Front-matter中加上</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">notoc:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>即可关闭该页面的目录页。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/qq_44766883/article/details/113478757">在Hexo NexT主题中关闭指定文章的Table of Contents</a></p>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>捣鼓记录</category>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Next</tag>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>添加小记页面</title>
    <link href="/posts/a8c2/"/>
    <url>/posts/a8c2/</url>
    
    <content type="html"><![CDATA[<h3 id="一、作用"><a href="#一、作用" class="headerlink" title="一、作用"></a>一、作用</h3><p>用于记录一些小的，无法成篇的小碎片。为在线编辑提供一个入口。</p><h3 id="二、实现"><a href="#二、实现" class="headerlink" title="二、实现"></a>二、实现</h3><p>首先新建一个 <code>page</code> <span id="more"></span></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo n page write<br></code></pre></td></tr></table></figure><p>这样子我们在 <code>blog/source</code> 文件夹下面就得到一个 <code>write</code> 文件夹，同时里面有一个 <code>index.md</code> 。只需要编辑该文件即可配置小记页面。</p><p>在小记页面采取了 <code>html</code> 格式书写，方便自定义一些样式。在 <code>write</code> 文件夹下新建 <code>card.css</code> 作为样式文件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align: center&quot;</span>&gt;</span>一些小的碎片记录<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>---<br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;card.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-comment">&lt;!--start--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card&quot;</span> <span class="hljs-attr">draggable</span>=<span class="hljs-string">&quot;true&quot;</span>  <span class="hljs-attr">scale</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">width</span>=<span class="hljs-string">100%</span>  <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;index/a.jpg&quot;</span> <span class="hljs-attr">draggable</span>=<span class="hljs-string">&quot;false&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card-text&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>测试标题<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>海内存知己，天涯若比邻<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>2023-02-13<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card&quot;</span> <span class="hljs-attr">draggable</span>=<span class="hljs-string">&quot;true&quot;</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card-text&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>吃夜宵1：没有蒸饺<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>上次在学校，出去吃夜宵。<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>：老板，蒸饺什么馅的？<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>老板：猪肉馅的。<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>：好的来一份！<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>老板：没有蒸饺。<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>2022-02-13<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-comment">&lt;!--end--&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p>效果如下，增加 <code>card</code> 的数量就可以继续增加卡片。</p><img src="/posts/a8c2/card.png" class="" title="image-20230214214310073"><p><code>card.css</code> 文件主要内容如下，<code>card</code> 元素的  <code>scale=&quot;true&quot;</code> 意味着图像等比缩小，不加此参数则独占一行。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.card</span> &#123;<br>    <span class="hljs-attribute">display</span>: inline-block;<br>    <span class="hljs-attribute">vertical-align</span>: top;    <br>    <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">0.7</span>);<br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">2px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">15</span>), <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">4px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">2</span>), <span class="hljs-number">0</span> <span class="hljs-number">12px</span> <span class="hljs-number">12px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">15</span>);<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0rem</span> <span class="hljs-number">0.5rem</span> <span class="hljs-number">2.5rem</span> <span class="hljs-number">0.5rem</span>;<br>    <span class="hljs-attribute">transition</span>: box-shadow .<span class="hljs-number">2s</span> ease-in-out;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">15px</span>;<br>    <span class="hljs-attribute">overflow</span>: hidden;<br>&#125;<br><span class="hljs-selector-class">.card</span><span class="hljs-selector-attr">[draggable=true]</span> &#123;<br>    <span class="hljs-attribute">cursor</span>: move;<br>&#125;<br><span class="hljs-selector-class">.card</span><span class="hljs-selector-attr">[draggable=false]</span> &#123;<br>    <span class="hljs-attribute">cursor</span>: not-allowed;<br>&#125;<br><span class="hljs-selector-class">.card</span><span class="hljs-selector-attr">[scale=true]</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">50%</span>;<br>&#125;<br><span class="hljs-selector-class">.card</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">18px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">1</span>), <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">36px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">15</span>), <span class="hljs-number">0</span> <span class="hljs-number">36px</span> <span class="hljs-number">36px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">2</span>);<br>&#125;<br><span class="hljs-selector-class">.card</span> &gt; <span class="hljs-selector-tag">img</span> &#123;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-selector-class">.card-text</span> &#123;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0.75rem</span>;<br>&#125;<br><span class="hljs-selector-class">.card-text</span> &gt; <span class="hljs-selector-tag">h3</span> &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0.25rem</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">1.05rem</span>;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1.5rem</span>;<br>    <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">600</span>;<br>    <span class="hljs-attribute">cursor</span>: pointer;<br>    <span class="hljs-attribute">transition</span>: color .<span class="hljs-number">2s</span> ease-in-out;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">10</span>,<span class="hljs-number">10</span>,<span class="hljs-number">10</span>,<span class="hljs-number">0.8</span>);<br>&#125;<br><span class="hljs-selector-class">.card-text</span> &gt; <span class="hljs-selector-tag">h3</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-built_in">rgb</span>(<span class="hljs-number">28</span>, <span class="hljs-number">87</span>, <span class="hljs-number">127</span>);<br>&#125;<br><span class="hljs-selector-class">.card-text</span> &gt; <span class="hljs-selector-tag">span</span> &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.9rem</span>;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1rem</span>;<br>    <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">200</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">10</span>,<span class="hljs-number">10</span>,<span class="hljs-number">10</span>,<span class="hljs-number">0.8</span>);<br>&#125;<br><br><span class="hljs-selector-class">.card-text</span> &gt; <span class="hljs-selector-tag">h4</span> &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.95rem</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0.7</span>);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>捣鼓记录</category>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Next</tag>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo实现在线编辑</title>
    <link href="/posts/c96c/"/>
    <url>/posts/c96c/</url>
    
    <content type="html"><![CDATA[<h3 id="一、配置Git-Action"><a href="#一、配置Git-Action" class="headerlink" title="一、配置Git Action"></a>一、配置Git Action</h3><h4 id="1-什么是Git-Action"><a href="#1-什么是Git-Action" class="headerlink" title="1. 什么是Git Action"></a>1. 什么是Git Action</h4><p><strong>Git Action</strong> 是Github 提供的一个功能，只要做好配置文件，就能够自动将该仓库的代码拉取到服务器进行执行。</p><p>基于此，可以将hexo博客的部署进行自动化，只需要每次上传源代码文件即可自动部署。<span id="more"></span></p><p>具体的讲解可以参考官方文档 <a href="https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions">Understanding GitHub Actions - GitHub Docs</a> 。</p><h4 id="2-配置yml"><a href="#2-配置yml" class="headerlink" title="2. 配置yml"></a>2. 配置yml</h4><p>在博客根目录下面新建 <code>.github/workflows/随便什么名字.yml</code> 配置好yml文件之后，每次只要push到remote就会自动识别执行。</p><p>在网上找了很多配置教程，但是都失败了，查看 <font color=red>ERROR</font> 发现的原因有如下：</p><ol><li>Windows系统下的文件转到Linux之后无法正常识别。我的电脑是Windows，但是找到的教程全部都是使用的 <code>runs-on: ubuntu-latest</code> 。</li><li>配置的私钥无法被正常识别，导致action服务器无法正确访问GitHub服务器。</li></ol><p>我的配置代码如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># workflow name</span><br><span class="hljs-attr">name:</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">Blog</span> <span class="hljs-string">CI</span><br><br><span class="hljs-comment"># main branch on push, auto run</span><br><span class="hljs-attr">on:</span> <br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">main</span><br><br><span class="hljs-attr">env:</span><br>  <span class="hljs-attr">TZ:</span> <span class="hljs-string">Asia/Shanghai</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span> <br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">windows-latest</span> <br>        <br>    <span class="hljs-attr">steps:</span><br>    <span class="hljs-comment"># check it to your workflow can access it</span><br>    <span class="hljs-comment"># from: https://github.com/actions/checkout</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Checkout</span> <span class="hljs-string">Repository</span> <span class="hljs-string">main</span> <span class="hljs-string">branch</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@main</span><br>      <br>    <span class="hljs-comment"># from: https://github.com/actions/setup-node  </span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Node.js</span> <span class="hljs-number">18.</span><span class="hljs-string">x</span> <br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@main</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">node-version:</span> <span class="hljs-string">&quot;18.x&quot;</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">Dependencies</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        npm install hexo-cli -g</span><br><span class="hljs-string"></span>      <span class="hljs-comment">#  npm install</span><br>    <br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Generate</span> <span class="hljs-string">files</span><br>      <span class="hljs-comment"># 编译 markdown 文件</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        hexo clean</span><br><span class="hljs-string">        hexo generate</span><br><span class="hljs-string"></span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span> <span class="hljs-string">hexo</span> <span class="hljs-string">blog</span><br>      <span class="hljs-comment"># 将编译后的博客文件推送到指定仓库</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        cd ./public &amp;&amp; git init &amp;&amp; git add .</span><br><span class="hljs-string">        git config --global user.name &#x27;&lt;用户名&gt;&#x27; </span><br><span class="hljs-string">        git config --global user.email &#x27;&lt;注册邮箱&gt;&#x27;</span><br><span class="hljs-string">        git add .</span><br><span class="hljs-string">        git commit -m &quot;GitHub Actions Auto Builder at $(date +&#x27;%Y-%m-%d %H:%M:%S&#x27;)&quot;</span><br><span class="hljs-string">        git push -f --quiet &quot;https://$&#123;&#123; secrets.ACCESS_TOKEN &#125;&#125;@github.com/&lt;用户名&gt;/&lt;用户名&gt;.github.io&quot; master:master</span><br></code></pre></td></tr></table></figure><p>下面解释一下：</p><ol><li><code>&lt;&gt;</code> 以及之间的内容是需要自己填写的，例如我的就是 <code>git config --global user.name &#39;Yu-Qi-hang&#39; </code></li><li>我的源代码和静态网页代码都存在 <code>&lt;用户名&gt;.github.io</code> 仓库，源代码在 <code>main</code> 分支，所以最前面是main，部署在 <code>master</code> 分支，所以最后是 <code>master</code> 。</li><li>一些插件新版本或者 <code>npm</code> 直接下载的版本有问题，所以我push时候没有在 <code>igitignore</code> 中添加 <code>node_modules</code> 因此我注释了 <code>npm install</code> 因为这是安装这些东西的命令。</li><li><code>$&#123;&#123; secrets.ACCESS_TOKEN &#125;&#125;</code> 是需要配置的一项，下面阐述如何配置。</li></ol><h4 id="3-配置Token"><a href="#3-配置Token" class="headerlink" title="3. 配置Token"></a>3. 配置Token</h4><ol><li>参考 <a href="../../%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/Windows%E7%9B%B8%E5%85%B3/Git%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8AGithub%E8%BF%9E%E6%8E%A5%E6%9C%AC%E5%9C%B0.md">Git安装以及Github连接本地</a>获取Token。</li><li>进到源代码仓库，点击仓库的settings，展开左侧侧栏的 <code>Secrets and variables</code> ，点击<code>Action</code> .</li><li>点击<code>New repository secrets</code> ，Name处输入 <code>ACCESS_TOKEN</code> 也就是配置文件中的名字，如果其他名字，对应更换即可，Secret处输入获得的Token，add即可。</li></ol><h3 id="二、添加入口"><a href="#二、添加入口" class="headerlink" title="二、添加入口"></a>二、添加入口</h3><p>已经完成了自动部署的配置，那么实现在线编辑只需要一个入口，指向GitHub仓库，我在小记页面底部添加了如下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align: center&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://github.com/Yu-Qi-hang/Yu-Qi-hang.github.io/tree/main/source/write/index.md&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fas fa-feather-alt&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这就是一个显示为羽毛笔的样式，点击即可跳转到我的write页面源码位置。只需要进行编辑在提交，就会自动部署更新。<img src="/posts/c96c/in.png" class="" title="image-20230214134912679"></p>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>捣鼓记录</category>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
      <tag>Git</tag>
      
      <tag>Hexo</tag>
      
      <tag>GitAction</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>添加文末感谢阅读</title>
    <link href="/posts/e307/"/>
    <url>/posts/e307/</url>
    
    <content type="html"><![CDATA[<h3 id="一、目的"><a href="#一、目的" class="headerlink" title="一、目的"></a>一、目的</h3><p>在文末添加阅读完成的提示，效果如下</p><img src="/posts/e307/image-20230210225417851.png" class="" title="image-20230210225417851"><span id="more"></span><h3 id="二、方法"><a href="#二、方法" class="headerlink" title="二、方法"></a>二、方法</h3><ol><li><p>在 <code>themes/next/layout/_macro/</code> 中新建 <code>passage-ebd-tag.njk</code> 写入以下内容</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">div</span>&gt;<br>    &#123;% if not is_index %&#125;<br>        &lt;<span class="hljs-selector-tag">div</span> style=&quot;<span class="hljs-attribute">text-align</span>:center;<span class="hljs-attribute">color</span>: <span class="hljs-number">#ccc</span>;<span class="hljs-attribute">font-size</span>:<span class="hljs-number">14px</span>;&quot;&gt;-------------本文结束&lt;<span class="hljs-selector-tag">i</span> class=&quot;fab fa-angellist&quot;&gt;&lt;/<span class="hljs-selector-tag">i</span>&gt;感谢您的阅读-------------&lt;/<span class="hljs-selector-tag">div</span>&gt;<br>    &#123;% endif %&#125;<br>&lt;/<span class="hljs-selector-tag">div</span>&gt;<br></code></pre></td></tr></table></figure></li><li><p>打开 <code>themes/next/layout/_macro/post.njk</code> ，在 post-body和post-footer之间添加如下代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;<span class="hljs-selector-tag">div</span>&gt;<br>  &#123;% if not is_index %&#125;<br>    &#123;% include &#x27;passage-end-tag<span class="hljs-selector-class">.njk</span>&#x27; %&#125;<br>  &#123;% endif %&#125;<br>&lt;/<span class="hljs-selector-tag">div</span>&gt;<br></code></pre></td></tr></table></figure></li><li><p>在主题配置文件中添加如下代码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 文章末尾添加“本文结束”标记</span><br><span class="hljs-attr">passage_end_tag:</span><br>  <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure></li></ol><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/Awt_FuDongLai/article/details/107430942">hexo笔记七：next主题添加版权声明_小镇攻城狮的博客-CSDN博客_next 版权声明</a></p>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>捣鼓记录</category>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Next</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Microsoft_store消失</title>
    <link href="/posts/5911/"/>
    <url>/posts/5911/</url>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>由于Microsoft store太卡了，照着网上教程乱弄，一次重启之后发现商店消失。 <span id="more"></span></p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li>win键之后输入<code>windows powershell</code>，点击用管理员打开。<img src="/posts/5911/open_with_admin.png" class="" title="image-1"></li><li>输入 <code>Get-AppxPackage -allusers | Select Name, PackageFullName</code>，查看Microsoft.WindowsStore 右侧对应的文件名，复制下来<img src="/posts/5911/windows_store.png" class="" title="image-2"></li><li>输入<code>Add-appxpackage -register &quot;C:\Program Files\WindowsApps\刚刚复制的文件名\appxmanifest.xml&quot; -disabledevelopmentmode</code>，回车。出现一闪而逝的绿色，表面部署完成，可以发现已经安装。</li></ol>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>学习记录</category>
      
      <category>Windows相关</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git安装以及Github连接本地</title>
    <link href="/posts/f446/"/>
    <url>/posts/f446/</url>
    
    <content type="html"><![CDATA[<h3 id="一、Windows安装Git"><a href="#一、Windows安装Git" class="headerlink" title="一、Windows安装Git"></a>一、Windows安装Git</h3><p>到<a href="https://git-scm.com/download/">Git官网</a> 下载对应版本进行安装。<br>除了想更改安装路径的，全部默认即可。<span id="more"></span></p><h3 id="二、-Github连接本地"><a href="#二、-Github连接本地" class="headerlink" title="二、 Github连接本地"></a>二、 Github连接本地</h3><p>右键打开Git Bash，注意用自己的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#配置注册Github的用户名和邮箱到本地</span><br><span class="hljs-comment">#在用户文件夹下的.gitconfig文件可以看到</span><br><br>git config --global user.name <span class="hljs-string">&quot;guest&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;email@xx.com&quot;</span><br><br><span class="hljs-comment">#生成密钥</span><br>ssh-keygen -t rsa -C <span class="hljs-string">&quot;email@xx.com&quot;</span><br><br><span class="hljs-comment">#回车默认存储位置，回车默认空密码，此时已经生成</span><br><span class="hljs-comment">#可以在用户文件夹的.ssh文件夹里面查看</span><br><br><span class="hljs-comment">#我们将其复制到粘贴板，方便等会粘贴</span><br>clip &lt; ~/.ssh/id_rsa.pub<br></code></pre></td></tr></table></figure><p>在Github头像下面点击Settings，再点击SSH and GPG keys，新建一个SSH，粘贴刚刚复制的密钥即可，名称自己定。</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><img src="/posts/f446/settings.png" class="" title="image-1"></td><td><img src="/posts/f446/ssh_keys.png" class="" title="image-2"></td></tr></tbody></table><p>回到Git Bash测试连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>连接成功</p><img src="/posts/f446/connect.png" class="" title="image-3"><h3 id="三、Github-Token-生成"><a href="#三、Github-Token-生成" class="headerlink" title="三、Github Token 生成"></a>三、Github Token 生成</h3><p>TODO</p>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>学习记录</category>
      
      <category>Windows相关</category>
      
    </categories>
    
    
    <tags>
      
      <tag>environment</tag>
      
      <tag>Git</tag>
      
      <tag>ssh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>增加右键文件夹打开方式</title>
    <link href="/posts/d435/"/>
    <url>/posts/d435/</url>
    
    <content type="html"><![CDATA[<p>在win系统中，右键文件有一个选项为打开方式，点击可以选择打开文件的方式，但是右键文件夹没有此功能。下面介绍一下如何增添此功能。<span id="more"></span></p><ol><li><strong>win+r</strong> 打开运行</li><li>输入 <strong>regedit</strong> 回车进入注册表</li><li>找到这个目录 <strong>HKEY_CLASSES_ROOT\Directory\shell</strong><img src="/posts/d435/dict.png" class="" title="image-1"></li><li>右键shell新建项，命名为openwith，在右边那一栏里双击默认那两个字，在出来的文本框里输入“打开方式”或者其他什么想要右键能看到的提示。</li><li>右键openwith新建项，命名为<strong>command</strong>，在右边那一栏里有个默认，双击它，在数值数据那里输入<ol><li>“C:\Windows\rundll32.exe Shell32.dll,OpenAs_RunDLL %1”或者</li><li>“C:\Windows\System32\rundll32.exe Shell32.dll,OpenAs_RunDLL %1”</li></ol></li><li>到底输入哪个的话，自己搜索电脑里面哪个位置存在 <strong>rundll32.exe</strong></li><li>效果如下：<img src="/posts/d435/result.png" class="" title="image-2">只需要点击该项就会弹出选择窗口，选择打开方式。</li></ol><p>想法的产生开始于对文件夹增加右键的VSCode打开方式之后，又增加Typora打开方式。想到这样子如果之后还要加，显得过于累赘，为什么不能像右键文件一样可以选择打开方式呢？于是借鉴了右键文件增加打开方式的方法，实现了该功能。</p>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>学习记录</category>
      
      <category>Windows相关</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>阿里云盘挂载</title>
    <link href="/posts/c68c/"/>
    <url>/posts/c68c/</url>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>使用阿里云盘自带的视频播放有很多限制，而且使用体验极差。但是potplayer可以有很多个性化播放设置。想在本地播放阿里云盘中的视频需要下载的话很麻烦，因此借助alist将云盘挂载到本地，再调用potplayer的网络媒体播放功能直接播放。<span id="more"></span></p><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><p>阿里云盘开发官方api通道，到 <a href="https://github.com/alist-org/alist/releases">https://github.com/alist-org/alist/releases</a> 下载最新版进行安装，Windows的是直接覆盖即可，如何按照官方文档的阿里云盘open进行配置即可。</p><h3 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><h4 id="1-Alist下载安装与运行"><a href="#1-Alist下载安装与运行" class="headerlink" title="1. Alist下载安装与运行"></a>1. Alist下载安装与运行</h4><p><a href="https://www.aliyundrive.com/s/dLPP5VxLpTN">提取码：2u88</a><br>下载之后拖动到自己喜欢的地方存起来，比如我存在这里<img src="/posts/c68c/save.png" class="" title="image.png"><br>点击资源管理器路径位置输入<strong>cmd</strong> 回车打开终端<img src="/posts/c68c/open_terminal.png" class="" title="image.png"><br>输入 <strong>alist.exe server</strong>回车运行程序，记住密码和端口号</p><img src="/posts/c68c/run.png" class="" title="image.png"><img src="/posts/c68c/port.png" class="" title="image.png"> <h4 id="2-Alist配置"><a href="#2-Alist配置" class="headerlink" title="2. Alist配置"></a>2. Alist配置</h4><blockquote><p>浏览器输入 <strong>127.0.0.1:5244</strong>进入配置界面，用户名为admin，密码为刚才终端显示的密码，登录。可以在管理面板修改密码，按照<a href="https://alist.nn.ci/zh/guide/drivers/aliyundrive.html">阿里云盘</a>进行配置如下：</p></blockquote><img src="/posts/c68c/info.png" class="" title="image.png"><img src="/posts/c68c/add_drive.png" class="" title="image.png"><img src="/posts/c68c/settings.png" class="" title="image.png"><p>关于挂载路径，可以自己定义，我挂载了多个云盘，就选择把阿里云盘的两个账号分别设置为 <code>/aliyun/0</code> 和 <code>/aliyun/1</code>。<br>下面介绍根文件夹和刷新令牌获取方式</p><ol><li>刷新令牌：登录网页版阿里云盘，f12打开开发者模式，按照如同方式找到<img src="/posts/c68c/tokens.png" class="" title="image.png"></li><li>根文件夹：进入自己希望挂载的文件夹，我想挂的是video那么进入之后地址folder&#x2F;后面的一串就是<img src="/posts/c68c/roots.png" class="" title="image.png"></li></ol><p>对于<strong>阿里云盘分享</strong>挂载，好处是不用转存到自己的云盘，占用空间，缺点是他人解除分享之后会失效。操作和上述过程相同，但是多一项叫做 <strong>分享ID</strong>的项目，是指 <strong>&#x2F;s&#x2F;…&#x2F;folder</strong>中的…部分。<img src="/posts/c68c/share.png" class="" title="image.png"> </p><h4 id="3-potplayer添加播放"><a href="#3-potplayer添加播放" class="headerlink" title="3. potplayer添加播放"></a>3. potplayer添加播放</h4><p><a href="https://www.aliyundrive.com/s/motNMUBjym6">提取码：1p6i</a> 下载完成之后双击解压即可使用，是便携版软件。把文件夹放到喜欢的地方，创建PotPlayerMini64.exe的快捷方式，放到</p><p>C:\Users\用户名\AppData\Roaming\Microsoft\Windows\Start Menu\Programs </p><p>里面</p><p>如图配置，账号密码为自己刚刚保存的账号密码，即可完成<br>如果上一步的挂载路径是其他形式，以我的 <code>/aliyun/1</code>为例，这路的路径就应该改为 <code>127.0.0.1/dav/aliyun/1</code>。</p><img src="/posts/c68c/add_list.png" class="" title="image.png"> <h4 id="4-开机自启挂载程序"><a href="#4-开机自启挂载程序" class="headerlink" title="4. 开机自启挂载程序"></a>4. 开机自启挂载程序</h4><p><a href="https://www.aliyundrive.com/s/GWGGZuckdpF">提取码：62ow</a> 下载这个脚本和alist.exe放到一个文件夹里面，创建这个脚本的快捷方式，电脑win+r 输入shell:startup，将快捷方式放进电脑的启动文件夹内。</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><img src="/posts/c68c/startup.png" class="" title="image.png"></td><td><img src="/posts/c68c/quickstart.png" class="" title="image.png"></td></tr></tbody></table><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ol><li><a href="https://www.bilibili.com/video/BV1vd4y117CV/?spm_id_from=333.999.0.0&vd_source=bab75b3ccf1b5ff4356ab5c39c33eca7">【Alist网盘挂载】电脑端Alist挂载网盘资源并实现webdav播放_哔哩哔哩_bilibili</a></li><li><a href="https://alist.nn.ci/zh/guide/drivers/aliyundrive.html">阿里云盘</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>学习记录</category>
      
      <category>Windows相关</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
      <tag>alist</tag>
      
      <tag>webdav</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nodejs安装以及更新</title>
    <link href="/posts/efdd/"/>
    <url>/posts/efdd/</url>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol><li>Windows系统不能直接通过命令行安装Node.js，需要下载安装包进行安装。</li><li>官网下载非常缓慢，因此推荐到 <a href="http://nodejs.cn/download/">Node.js中文网</a> 进行下载。<span id="more"></span></li><li>下载之后除了安装路径可以自己选择一下，其他默认即可。</li><li>安装完成之后win+r呼出运行，输入cmd回车，输入 <code>node -v</code> 查看是否安装成功。<img src="/posts/efdd/node_version.png" class="" title="image.png">这样子就是成功了。</li><li>npm服务器在国外，使用非常慢，进行换源，换成阿里的</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org　<span class="hljs-comment">#换源</span><br>npm config list<span class="hljs-comment">#查看是否换源成功</span><br></code></pre></td></tr></table></figure><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><ol><li>更新就是和安装一样，下载新版本安装包，安装到旧版本安装位置自动覆盖即可。</li></ol>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>学习记录</category>
      
      <category>Windows相关</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nodejs</tag>
      
      <tag>Windows</tag>
      
      <tag>environment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>绳结技术</title>
    <link href="/posts/639b/"/>
    <url>/posts/639b/</url>
    
    <content type="html"><![CDATA[<h3 id="认识绳子"><a href="#认识绳子" class="headerlink" title="认识绳子"></a>认识绳子</h3><p>部位：绳头，绳尾，主绳</p><img src="/posts/639b/shengjie1.png" class="" title="image-1"><p>弯个弯：绳👂</p><img src="/posts/639b/shengjie2.png" class="" title="image-2"><p>打个结：绳结<br>绳结的圈圈：绳环<br>绳结的节：节目</p><img src="/posts/639b/shengjie3.png" class="" title="image-3"> <h3 id="绳结"><a href="#绳结" class="headerlink" title="绳结"></a>绳结</h3><h4 id="简单结"><a href="#简单结" class="headerlink" title="简单结"></a>简单结</h4><p>简称单结</p><img src="/posts/639b/shengjie4.png" class="" title="image-4"> <h4 id="平节-妈妈结"><a href="#平节-妈妈结" class="headerlink" title="平节&#x2F;妈妈结"></a>平节&#x2F;妈妈结</h4><ol><li>绳尾从外向内穿过绳耳，再从从上到下从外侧下来，最后再次穿过绳耳，将绳头绳尾和主绳一起往外拉</li></ol><img src="/posts/639b/shengjie5.png" class="" title="image-5"><ol><li>绕在腰上，左搭右一个简单结，右搭左再一个</li></ol><img src="/posts/639b/shengjie6.png" class="" title="image-6"> <h4 id="接绳结"><a href="#接绳结" class="headerlink" title="接绳结"></a>接绳结</h4><p>绳尾从外向内穿过绳耳，再从从上到下从外侧下来，最后从两环之间穿过，将绳头绳尾和主绳一起往外拉</p><img src="/posts/639b/shengjie7.png" class="" title="image-7"> <h4 id="水手结-渔人结"><a href="#水手结-渔人结" class="headerlink" title="水手结&#x2F;渔人结"></a>水手结&#x2F;渔人结</h4><p>绳头绳尾对向重叠一部分，分别绕着主绳打一个单结</p><img src="/posts/639b/shengjie8.png" class="" title="image-8"> <h4 id="双重水手结"><a href="#双重水手结" class="headerlink" title="双重水手结"></a>双重水手结</h4><p>绳头绳尾对向重叠一部分，分别绕着主绳打一个绕两圈的单结（向内绕）</p><img src="/posts/639b/shengjie9.png" class="" title="image-9"> <h4 id="双套结"><a href="#双套结" class="headerlink" title="双套结"></a>双套结</h4><p>双手拉着主绳，一个向前绕，一个向后，叠起来</p><img src="/posts/639b/shengjie10.png" class="" title="image-10"><h4 id="双环结-不用记"><a href="#双环结-不用记" class="headerlink" title="双环结&#x2F;不用记"></a>双环结&#x2F;不用记</h4><p>双手拉着主绳，同方向绕，叠起来 </p><h4 id="水结"><a href="#水结" class="headerlink" title="水结"></a>水结</h4><p>一个单结，然后绳尾顺着绳头逆向走一遍</p><img src="/posts/639b/shengjie11.png" class="" title="image-11"> <h4 id="工程蝴蝶结"><a href="#工程蝴蝶结" class="headerlink" title="工程蝴蝶结"></a>工程蝴蝶结</h4><p>主绳搭在手上，外侧 顺势在手上绕一圈，然后再绕到虎口处，中间一圈从上侧外拉一部分，从手掌和绳子之间穿出，取下绳子，收紧。</p><img src="/posts/639b/shengjie12.png" class="" title="image-12"> <h4 id="八字结"><a href="#八字结" class="headerlink" title="八字结"></a>八字结</h4><p>主绳搭载手上，绳尾绕主绳一圈半后穿过绳环</p><img src="/posts/639b/shengjie13.png" class="" title="image-13"> <h4 id="八字结系统：双重八字结-防滑结-绳尾结"><a href="#八字结系统：双重八字结-防滑结-绳尾结" class="headerlink" title="八字结系统：双重八字结+防滑结+绳尾结"></a>八字结系统：双重八字结+防滑结+绳尾结</h4><img src="/posts/639b/shengjie14.png" class="" title="image-14"><img src="/posts/639b/shengjie15.png" class="" title="image-15"> <h4 id="布林结"><a href="#布林结" class="headerlink" title="布林结"></a>布林结</h4><img src="/posts/639b/shengjie16.png" class="" title="image-16"><h4 id="单手布林结"><a href="#单手布林结" class="headerlink" title="单手布林结"></a>单手布林结</h4><p>忘记了，没法更新</p>]]></content>
    
    
    <categories>
      
      <category>杂技杂记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>livelihood</tag>
      
      <tag>绳结</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>导出语雀知识库</title>
    <link href="/posts/7713/"/>
    <url>/posts/7713/</url>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>之前说过原先的GitHub Pages的博客源码由于重装系统丢失，最近比较闲，想要重新搭建，因此希望能够将语雀知识库导出，但是只能导出lakebook格式，不能满足要求，于是有了这个摸索。 </p><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><ol><li><p>安装nodejs，参考 <a href="../%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/Windows%E7%9B%B8%E5%85%B3/Nodejs%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E6%9B%B4%E6%96%B0.md">Nodejs安装以及更新</a> 要求 Node.js 16.18.0 以上版本。</p></li><li><p><code>win+r</code>呼出运行，输入<code>cmd</code>回车，运行下面代码安装小工具。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm i -g yuque-exporter --registry=https://registry.npmmirror.com<br></code></pre></td></tr></table></figure></li><li><p><a href="https://link.zhihu.com/?target=https://www.yuque.com/yuque/developer/api%23785a3731">获取语雀token</a> 并且设置，注意 <code>&lt;your_token&gt;</code>用自己获取的token替换。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">set</span> YUQUE_TOKEN=&lt;your_token&gt;<br></code></pre></td></tr></table></figure></li><li><p>在自己希望存放文件的文件夹下点击资源管理器路径输入<strong>cmd</strong> 回车打开终端，运行下面代码<img src="/posts/7713/termina;.png" class="" title="image.png"></p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yuque-exporter<br></code></pre></td></tr></table></figure></li><li><p>之后就会自动完成文章拉取，如果在文档下面又子文档，那么该文档会变成一个文件和一个文件夹。图片会全部存放哎asset文件夹之内。站外的卡片和标题不会显示，推荐全部使用链接的形式。站内的引用会自动变成链接。</p></li></ol><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ol><li><a href="https://zhuanlan.zhihu.com/p/582287220">语雀知识库一键导出 Markdown 工具</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>捣鼓记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
      <tag>nodejs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu 更新软件源</title>
    <link href="/posts/15d3/"/>
    <url>/posts/15d3/</url>
    
    <content type="html"><![CDATA[<h3 id="一、备份软件源配置"><a href="#一、备份软件源配置" class="headerlink" title="一、备份软件源配置"></a>一、备份软件源配置</h3><p><code>ctrl+alt+t</code>打开终端，执行下面代码备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bak<br></code></pre></td></tr></table></figure><h3 id="二、更换软件源"><a href="#二、更换软件源" class="headerlink" title="二、更换软件源"></a>二、更换软件源</h3><p>在终端中执行下面命令打开配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/apt/sources.list<br></code></pre></td></tr></table></figure><p>按下 <code>i</code> 进入编辑模式，将文件内容替换为需要使用的文件源，国内常见如下<br>依次按下<code>ESC</code> <code>:</code> 之后输入<code>wq</code>回车保存 </p><h3 id="三、更新"><a href="#三、更新" class="headerlink" title="三、更新"></a>三、更新</h3><p>执行下面命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get update<span class="hljs-comment">#更新软件源</span><br>apt-get upgrade<span class="hljs-comment">#更新软件</span><br></code></pre></td></tr></table></figure><h3 id="常见国内镜像"><a href="#常见国内镜像" class="headerlink" title="常见国内镜像"></a>常见国内镜像</h3><p><strong>阿里源</strong>地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse<br></code></pre></td></tr></table></figure><p><strong>华为源</strong>地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">deb https://repo.huaweicloud.com/ubuntu/ focal main restricted<br>deb https://repo.huaweicloud.com/ubuntu/ focal-updates main restricted<br>deb https://repo.huaweicloud.com/ubuntu/ focal universe<br>deb https://repo.huaweicloud.com/ubuntu/ focal-updates universe<br>deb https://repo.huaweicloud.com/ubuntu/ focal-backports main restricted universe<br>deb https://repo.huaweicloud.com/ubuntu/ focal-security main restricted<br>deb https://repo.huaweicloud.com/ubuntu/ focal-security universe<br></code></pre></td></tr></table></figure><p><strong>清华源</strong>地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse<br>deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse<br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse<br>deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse<br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse<br>deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe ultiverse<br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse<br>deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse<br>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse<br>deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe ultiverse<br></code></pre></td></tr></table></figure><p><strong>中科大源</strong>地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse<br>deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse<br>deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse<br>deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse<br>deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse<br>deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse<br>deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse<br>deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse<br>deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse<br>deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse<br></code></pre></td></tr></table></figure><p><strong>163源</strong>地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">deb http://mirrors.163.com/ubuntu/ bionic main restricted universe multiverse<br>deb http://mirrors.163.com/ubuntu/ bionic-security main restricted universe multiverse<br>deb http://mirrors.163.com/ubuntu/ bionic-updates main restricted universe multiverse<br>deb http://mirrors.163.com/ubuntu/ bionic-proposed main restricted universe multiverse<br>deb http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiverse<br>deb-src http://mirrors.163.com/ubuntu/ bionic main restricted universe multiverse<br>deb-src http://mirrors.163.com/ubuntu/ bionic-security main restricted universe multiverse<br>deb-src http://mirrors.163.com/ubuntu/ bionic-updates main restricted universe multiverse<br>deb-src http://mirrors.163.com/ubuntu/ bionic-proposed main restricted universe multiverse<br>deb-src http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiverse<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>学习记录</category>
      
      <category>Linux相关</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Anaconda下载、安装与使用</title>
    <link href="/posts/8c26/"/>
    <url>/posts/8c26/</url>
    
    <content type="html"><![CDATA[<h3 id="1-下载安装"><a href="#1-下载安装" class="headerlink" title="1. 下载安装"></a>1. 下载安装</h3><ol><li><p>来到 <a href="https://www.anaconda.com/">anaconda官网</a> 点击download进行下载。嫌慢的可以来 <a href="https://mirrors.zju.edu.cn/">镜像站</a> 下载。</p></li><li><p>运行下载好的程序开始安装，next-&gt;agree-&gt;next，选择自己希望的安装位置后一路默认完成。</p> <img src="/posts/8c26/install_place.png" class="" title="image-1"></li><li><p>配置环境变量。右键此电脑打开属性，打开高级系统设置，打开环境变量</p><table><thead><tr><th><img src="/posts/8c26/attribute.png" class="" title="image-2"></th><th><img src="/posts/8c26/advanced_setting.png" class="" title="image-3"></th><th><img src="/posts/8c26/env_para.png" class="" title="image-4"></th></tr></thead></table><p> 选中系统变量中的Path点击编辑，新建，增加两条路径</p> <img src="/posts/8c26/edit.png" class="" title="image-5"><img src="/posts/8c26/add_path.png" class="" title="image-6"></li><li><p>检验win+R打开运行，cmd回车打开终端，如下说明安装成功。</p> <figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">conda <span class="hljs-comment">--version</span><br></code></pre></td></tr></table></figure> <img src="/posts/8c26/conda_version.png" class="" title="image-7"></li><li><p>换源，增加国内下载源以加快速度。可以参考<a href="https://mirror.zju.edu.cn/docs/anaconda/">浙大镜像站</a></p> <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#添加下载源</span><br>conda config --add channels http:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>pkgs<span class="hljs-regexp">/free/</span><br>conda config --add channels http:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>pkgs<span class="hljs-regexp">/main/</span><br>conda config --add channels http:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<span class="hljs-regexp">/conda-forge/</span><br><span class="hljs-comment">#删除默认源</span><br>conda config --remove channels defaults<br></code></pre></td></tr></table></figure></li><li><p>查看通道地址</p> <figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">conda <span class="hljs-built_in">config</span> <span class="hljs-comment">--show channels</span><br></code></pre></td></tr></table></figure><p> 此时显示如下</p> <img src="/posts/8c26/channels.png" class="" title="image-8"><p> 需要关闭defaults通道。找到 .condarc 文件。我的位于 <code>C:\Users\26594\</code>文件夹下，用记事本打开，在-defaults前加一个#，保存即可。</p><table><thead><tr><th><img src="/posts/8c26/condarc.png" class="" title="image-9"></th><th><img src="/posts/8c26/new_channels.png" class="" title="image-10"></th></tr></thead></table></li></ol><h3 id="2-使用"><a href="#2-使用" class="headerlink" title="2. 使用"></a>2. 使用</h3><ol><li><p>常用命令</p><table><thead><tr><th>查看所有虚拟环境</th><th>conda env list</th></tr></thead><tbody><tr><td>创建XXX 环境</td><td>conda create -n XXX：</td></tr><tr><td>激活&#x2F;启用 XXX环境</td><td>activate XXX</td></tr><tr><td>移除XXX环境</td><td>conda env remove -n XXX</td></tr><tr><td>退出当前环境</td><td>conda deactivate</td></tr><tr><td>列出当前环境所以包</td><td>conda list</td></tr><tr><td>安装XXX包</td><td>conda install XXX</td></tr><tr><td>移除XXX包</td><td>conda remove XXX</td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr></tbody></table></li><li><p>在VSCode中使用conda环境</p><p> cmd中执行</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda init powershell<br></code></pre></td></tr></table></figure><p> 选择一个文件夹用vscode打开，**ctrl+&#96;**打开终端，执行conda activate XXX即可。</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>学习记录</category>
      
      <category>Windows相关</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
      <tag>conda</tag>
      
      <tag>environment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Win10安装Ubuntu22.04双系统</title>
    <link href="/posts/764/"/>
    <url>/posts/764/</url>
    
    <content type="html"><![CDATA[<h3 id="1-下载镜像文件"><a href="#1-下载镜像文件" class="headerlink" title="1. 下载镜像文件"></a>1. 下载镜像文件</h3><p>进入 <a href="https://cn.ubuntu.com/download/desktop">Ubuntu下载链接</a> 下载22.04版本，等待下载完成。</p><img src="/posts/764/download.png" class="" title="image.png"><h3 id="2-下载安装镜像工具"><a href="#2-下载安装镜像工具" class="headerlink" title="2. 下载安装镜像工具"></a>2. 下载安装镜像工具</h3><p>进入 <a href="https://rufus.ie/zh/#google_vignette">rufus官网</a> 下载便携版即可。</p><img src="/posts/764/rufus.png" class="" title="image.png"><h3 id="3-安装盘制作"><a href="#3-安装盘制作" class="headerlink" title="3. 安装盘制作"></a>3. 安装盘制作</h3><p>打开上面下好的软件，准备一个4G以上空U盘。连接后会自动识别到U盘盘符。</p><img src="/posts/764/Upan.png" class="" title="image.png"><p>点击上图红色框选择镜像，找到下好的镜像文件点击打开。确保已经不需要U盘内的资料，点击开始。</p><img src="/posts/764/done.png" class="" title="image.png"><p>安装完成。</p><h3 id="4-磁盘分区"><a href="#4-磁盘分区" class="headerlink" title="4. 磁盘分区"></a>4. 磁盘分区</h3><p>右键开始菜单，打开磁盘管理。我只有一个SSD，因此只需要分出一块分区。右键分区，选择压缩卷。</p><img src="/posts/764/compress.png" class="" title="image.png"><p>1024*120个MB空间</p><img src="/posts/764/120G.png" class=""><h3 id="5-查看磁盘格式"><a href="#5-查看磁盘格式" class="headerlink" title="5. 查看磁盘格式"></a>5. 查看磁盘格式</h3><p>win+r 打开运行，输入 msinfo32 ，查看bios模式。</p><img src="/posts/764/bios.png" class="" title="image.png"><h3 id="6-安装双系统"><a href="#6-安装双系统" class="headerlink" title="6. 安装双系统"></a>6. 安装双系统</h3><p>重启计算机，进入bios，我的是dell，一直按f12即可。选择UEFI一栏回车。进入了安装系统，选择语言为中文简体，点击安装Ubuntu。之后选择English(US)，继续。安装软件时候选择最小安装即可。</p><h3 id="7-软件安装"><a href="#7-软件安装" class="headerlink" title="7. 软件安装"></a>7. 软件安装</h3><p>按照引导完成安装之后进行联网，软件安装。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt update#拉取更新<br>sudo apt install vim#安装vim<br>sudo apt upgrade#更新软件<br></code></pre></td></tr></table></figure><p>安装了edge进行了登录和同步。</p><h3 id="8-时间同步"><a href="#8-时间同步" class="headerlink" title="8. 时间同步"></a>8. 时间同步</h3><p>Ubuntu 与 Windows 时间确定机制不同，需要进行同步。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install ntpdate #安装同步工具<br>sudo ntpdate time.windows.com #更改时间确定机制<br>sudo hwclock --localtime --systohc #同步硬件时间<br></code></pre></td></tr></table></figure><h3 id="9-参考视频"><a href="#9-参考视频" class="headerlink" title="9. 参考视频"></a>9. 参考视频</h3><p><a href="https://www.bilibili.com/video/BV1554y1n7zv/?spm_id_from=333.337.search-card.all.click&vd_source=bab75b3ccf1b5ff4356ab5c39c33eca7">Windows 和 Ubuntu 双系统的安装和卸载_哔哩哔哩_bilibili</a><br>上视频使用的安装工具在我得U盘不行，于是按照下面视频制作U盘，U盘文件系统为FAT32。与上边视频不同的操作就是软件安装时选择了最小安装，以及分配空间时候有自己想法。</p><p><a href="https://www.bilibili.com/video/BV1F44y1m7ZL/?spm_id_from=333.337.search-card.all.click&vd_source=bab75b3ccf1b5ff4356ab5c39c33eca7">Win10与Ubuntu双系统安装（绝对新手向）_哔哩哔哩_bilibili</a></p>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>捣鼓记录</category>
      
      <category>双系统</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>双系统切换界面</title>
    <link href="/posts/9e30/"/>
    <url>/posts/9e30/</url>
    
    <content type="html"><![CDATA[<h3 id="一、更改默认启动项"><a href="#一、更改默认启动项" class="headerlink" title="一、更改默认启动项"></a>一、更改默认启动项</h3><p>ctrl+alt+T 打开终端，输入下面代码打开配置文件</p><pre><code class="hljs">sudo gedit /etc/default/grub</code></pre><p>此处为 <code>0</code>表示ubuntu为默认系统，改为<code>2</code>即windows为默认系统。<br><code>10</code>表示等待时间为10s</p><img src="/posts/9e30/parameters.png" class="" title="image.png"><p>最后运行改行代码实现更新，重启发现更改成功。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo update-grub<br></code></pre></td></tr></table></figure><h3 id="二、界面美化"><a href="#二、界面美化" class="headerlink" title="二、界面美化"></a>二、界面美化</h3><p>到 <a href="https://www.gnome-look.org/browse?cat=109&ord=latest">这里</a> 下载喜欢的主题，我选了 <a href="https://www.gnome-look.org/p/1443844">BigSur GRUB Theme</a> 有点慢。<br>解压缩主题文件夹，进入 <code>install.sh</code>所在文件夹右键打开终端，执行以下命令进行安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">./install.sh<br></code></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo vim /etc/default/grub #打开配置文件<br></code></pre></td></tr></table></figure><pre><code class="hljs">配置主题和分辨率</code></pre><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">GRUB_CFXMODE=&quot;1920*1080&quot;<br>GRUB_THEME=&quot;/boot/grub/themes/bigsur/theme.txt&quot;<br></code></pre></td></tr></table></figure><p>更新配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo grub-mkconfig -o /boot/efi/EFI/ubuntu/grub.cfg<br>sudo update-grub<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>捣鼓记录</category>
      
      <category>双系统</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GithubPages_Hexo搭建个人博客</title>
    <link href="/posts/fa96/"/>
    <url>/posts/fa96/</url>
    
    <content type="html"><![CDATA[<h3 id="一、hexo搭建本地博客"><a href="#一、hexo搭建本地博客" class="headerlink" title="一、hexo搭建本地博客"></a>一、hexo搭建本地博客</h3><h4 id="1-快速搭建hexo博客"><a href="#1-快速搭建hexo博客" class="headerlink" title="1. 快速搭建hexo博客"></a>1. 快速搭建hexo博客</h4><p>需要安装好node.js，可以参考<a href="../../%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/Windows%E7%9B%B8%E5%85%B3/Nodejs%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E6%9B%B4%E6%96%B0.md">Nodejs安装以及更新</a>，也需要安装好Git，可以参考<a href="../../%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/Windows%E7%9B%B8%E5%85%B3/Git%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8AGithub%E8%BF%9E%E6%8E%A5%E6%9C%AC%E5%9C%B0.md">Git安装以及Github连接本地</a>，之后随便位置右键打开Git Bash。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm i -g hexo-cli <span class="hljs-comment">#安装hexo模块</span><br><span class="hljs-built_in">cd</span> /myfiles <span class="hljs-comment">#进到希望存放的目录，我是C盘下的Myfiles文件夹</span><br>hexo init BLOG <span class="hljs-comment">#初始化配置</span><br><span class="hljs-built_in">cd</span> BLOG <span class="hljs-comment">#进入博客根目录</span><br>npm install <span class="hljs-comment">#安装配置插件</span><br>hexo g <span class="hljs-comment">#生成博客</span><br>hexo s <span class="hljs-comment">#本地预览博客</span><br></code></pre></td></tr></table></figure><p>此时浏览器输入 <code>127.0.0.1:4000</code>就看到了最初的界面<img src="/posts/fa96/home.png" class="" title="image.png"> </p><h4 id="2-hexo常用命令介绍"><a href="#2-hexo常用命令介绍" class="headerlink" title="2. hexo常用命令介绍"></a>2. hexo常用命令介绍</h4><table><thead><tr><th>hexo g</th><th>generate生成静态网页</th></tr></thead><tbody><tr><td>hexo s</td><td>server本地挂载预览网页</td></tr><tr><td>hexo d</td><td>deploy部署网页到远程服务器</td></tr><tr><td>hexo clean</td><td>清理已生成的网页</td></tr></tbody></table><h4 id="3-hexo博客美化"><a href="#3-hexo博客美化" class="headerlink" title="3. hexo博客美化"></a>3. hexo博客美化</h4><p>内容比较多，另外开一篇。</p><h3 id="二、hexo博客部署到Github-Pages"><a href="#二、hexo博客部署到Github-Pages" class="headerlink" title="二、hexo博客部署到Github Pages"></a>二、hexo博客部署到Github Pages</h3><h4 id="1-连接Github和本地"><a href="#1-连接Github和本地" class="headerlink" title="1. 连接Github和本地"></a>1. 连接Github和本地</h4><p>参考<a href="../../%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/Windows%E7%9B%B8%E5%85%B3/Git%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8AGithub%E8%BF%9E%E6%8E%A5%E6%9C%AC%E5%9C%B0.md">Git安装以及Github连接本地</a></p><h4 id="2-新建Github的仓库用于部署网页"><a href="#2-新建Github的仓库用于部署网页" class="headerlink" title="2. 新建Github的仓库用于部署网页"></a>2. 新建Github的仓库用于部署网页</h4><ol><li>登录Github新建一个名为<code>&lt;username&gt;.github.io</code>的仓库，这里<username>是指用户名。这样子之后的网页地址就是 <code>&lt;username&gt;.github.io</code>，其他名称也可以，不过会变成 <code>&lt;username&gt;.github.io/repo_name</code>，记得勾选初始化README。</li><li>点击仓库的Settings而不是头像下面的，进入仓库的设置，点击左侧Pages进行配置。<img src="/posts/fa96/pagesetting.png" class="" title="image.png"></li></ol><h4 id="3-配置本地博客"><a href="#3-配置本地博客" class="headerlink" title="3. 配置本地博客"></a>3. 配置本地博客</h4><p>打开博客根目录的 <strong>_config.yml</strong> 文件，将最后面部分的进行修改配置，具体仓库地址按照图中复制得到</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repository:</span> <span class="hljs-string">git@github.com:Yu-Qi-hang/Yu-Qi-hang.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><img src="/posts/fa96/ssh.png" class="" title="image.png"><p>另外Gitee Pages操作类似，但是需要实名认证和申请，另外需要改成。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repository:</span><br>    <span class="hljs-attr">github:</span> <span class="hljs-string">git@github.com:Yu-Qi-hang/Yu-Qi-hang.github.io.git</span><br>    <span class="hljs-attr">gitee:</span> <span class="hljs-string">git@gitee.com:Yu-Qi-hang/yu-qi-hang.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><h4 id="4-部署到远程仓库"><a href="#4-部署到远程仓库" class="headerlink" title="4. 部署到远程仓库"></a>4. 部署到远程仓库</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#安装部署工具</span><br><span class="hljs-string">npm</span> <span class="hljs-string">install</span> <span class="hljs-string">hexo-deployer-git</span> <span class="hljs-string">--save</span><br><span class="hljs-comment">#生成网页，进行部署</span><br><span class="hljs-string">hexo</span> <span class="hljs-string">g</span><br><span class="hljs-string">hexo</span> <span class="hljs-string">d</span><br></code></pre></td></tr></table></figure><p>每次更新，Github会自动部署，Gitee需要手动点击更新，可以看到部署成功![image.png](Github Pages+Hexo搭建个人博客&#x2F;1672908846691-b412dc41-e7fa-42dd-9774-021eb6130385.png)</p><h3 id="三、保存源码到Github"><a href="#三、保存源码到Github" class="headerlink" title="三、保存源码到Github"></a>三、保存源码到Github</h3><p>之前的部署是在master分支，但是现在Github的默认分支是main，因此可以将源码推送到main进行备份。<br>将当前博客的名称进行修改，随便什么名字。<br>之后，进入到博客所在目录，执行下面操作</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">git</span> <span class="hljs-string">clone</span> <span class="hljs-string">&lt;你的博客所在仓库的链接&gt;</span> <span class="hljs-string">&lt;你原先的博客文件夹名称&gt;</span><br></code></pre></td></tr></table></figure><p>拉取成功之后，cd 进入该目录，可以发现处于main分支<br>![image.png](Github Pages+Hexo搭建个人博客&#x2F;1672929691216-6a9ae5c4-e5d7-4fcd-8378-a7830d6661d4.png)<br>我们把原先博客目录下的东西全部复制到这里，执行下列操作即可推送</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">git</span> <span class="hljs-string">add</span> <span class="hljs-string">.</span><br><span class="hljs-string">git</span> <span class="hljs-string">commit</span> <span class="hljs-string">-m</span> <span class="hljs-string">&quot;000&quot;</span><br><span class="hljs-string">git</span> <span class="hljs-string">push</span> <span class="hljs-string">-f</span><br></code></pre></td></tr></table></figure><p>同时执行hexo的命令可以进行部署。</p>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>捣鼓记录</category>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
      <tag>Hexo</tag>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo_Typora实现相对路径图片显示</title>
    <link href="/posts/5934/"/>
    <url>/posts/5934/</url>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>之前都是使用的图床，但是有时候加载不稳定，所以现在都是把图片存在本地一起使用。但是hexo生成的静态网页会无法识别路径，因此需要插件辅助实现。<br>hexo文档有提及方法，但是不是不方便，就是失效。</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><ol><li>安装插件 <code>npm install hexo-asset-img --save</code> 这是在github找到的可用插件</li><li>打开配置文件，将 <code>post_asset_folder</code> 设置为 <code>true</code></li><li>打开typora偏好设置的图像一栏如下图设置，这样子复制的图片就会自动保存到文件同名同目录的文件夹里面，并且自动转义成相对路径 <figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">!<span class="hljs-selector-attr">[图片标签]</span>(文件名/图片名)<br></code></pre></td></tr></table></figure><img src="/posts/5934/path.png" class="" title="image.png"></li></ol>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>捣鼓记录</category>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo主题选择以及自定义配置</title>
    <link href="/posts/2cc5/"/>
    <url>/posts/2cc5/</url>
    
    <content type="html"><![CDATA[<h3 id="一、Hexo主题选择"><a href="#一、Hexo主题选择" class="headerlink" title="一、Hexo主题选择"></a>一、Hexo主题选择</h3><p>进入主题网站 <a href="https://hexo.io/themes/">https://hexo.io/themes/</a> 选择自己喜欢的主题，我选择的是Next主题，比较简洁美观，而且不需要封面图片。<br>参考github的仓库 <a href="https://github.com/next-theme/hexo-theme-next">https://github.com/next-theme/hexo-theme-next</a> 可以进行安装。</p><ol><li><p>进入博客根目录</p></li><li><p>执行下面代码。</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">git</span> <span class="hljs-string">clone</span> <span class="hljs-string">https://github.com/next-theme/hexo-theme-next</span> <span class="hljs-string">themes/next</span><br></code></pre></td></tr></table></figure></li><li><p>这时候进入 **themes **文件夹可以发现一个 <strong>next</strong> 文件夹，说明安装成功。</p></li><li><p>打开 _config.yml ，拉到最后，找到 theme</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">landscape</span><br><span class="hljs-comment">#改成</span><br><span class="hljs-attr">theme:</span> <span class="hljs-string">next</span><br></code></pre></td></tr></table></figure></li><li><p>执行网页生成和预览命令可以查看</p></li></ol><h3 id="二、个性化配置"><a href="#二、个性化配置" class="headerlink" title="二、个性化配置"></a>二、个性化配置</h3><p>参考 <a href="http://theme-next.iissnan.com/getting-started.html">Next使用文档</a> 进行各种配置。需要注意的是在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于<strong>站点根目录</strong>下，主要包含 Hexo 本身的配置；另一份位于<strong>主题目录</strong>下，这份配置由主题作者提供，主要用于配置主题相关的选项。<br>为了描述方便，在以下说明中，将前者称为 <strong>站点配置文件</strong>， 后者称为 <strong>主题配置文件</strong>。</p><ol><li><p>主题配置文件可以选择 scheme，最新版有四种外观，这里选择最新增加的 Gemini。</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Schemes</span><br><span class="hljs-comment"># scheme: Muse</span><br><span class="hljs-comment"># scheme: Mist</span><br><span class="hljs-comment"># scheme: Pisces</span><br><span class="hljs-attr">scheme:</span> <span class="hljs-string">Gemini</span><br></code></pre></td></tr></table></figure></li><li><p>站点配置文件可以选择语言，这里选择简体中文</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span><br></code></pre></td></tr></table></figure></li><li><p>在主题配置文件设置菜单，找到 menu，可以先全部打开，显得比较丰富，之后选择性关闭部分菜单页面，但是除了归档页，其他页面都需要自己生成。</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">menu:</span><br>  <span class="hljs-attr">home:</span> <span class="hljs-string">/</span> <span class="hljs-string">||</span> <span class="hljs-string">fa</span> <span class="hljs-string">fa-home</span><br>  <span class="hljs-attr">about:</span> <span class="hljs-string">/about/</span> <span class="hljs-string">||</span> <span class="hljs-string">fa</span> <span class="hljs-string">fa-user</span><br>  <span class="hljs-attr">tags:</span> <span class="hljs-string">/tags/</span> <span class="hljs-string">||</span> <span class="hljs-string">fa</span> <span class="hljs-string">fa-tags</span><br>  <span class="hljs-attr">categories:</span> <span class="hljs-string">/categories/</span> <span class="hljs-string">||</span> <span class="hljs-string">fa</span> <span class="hljs-string">fa-th</span><br>  <span class="hljs-attr">archives:</span> <span class="hljs-string">/archives/</span> <span class="hljs-string">||</span> <span class="hljs-string">fa</span> <span class="hljs-string">fa-archive</span><br>  <span class="hljs-attr">schedule:</span> <span class="hljs-string">/schedule/</span> <span class="hljs-string">||</span> <span class="hljs-string">fa</span> <span class="hljs-string">fa-calendar</span><br>  <span class="hljs-attr">sitemap:</span> <span class="hljs-string">/sitemap.xml</span> <span class="hljs-string">||</span> <span class="hljs-string">fa</span> <span class="hljs-string">fa-sitemap</span><br>  <span class="hljs-attr">commonweal:</span> <span class="hljs-string">/404/</span> <span class="hljs-string">||</span> <span class="hljs-string">fa</span> <span class="hljs-string">fa-heartbeat</span><br></code></pre></td></tr></table></figure></li><li><p>生成分类页，在博客根目录执行 <code>hexo new page categories</code> 即可生成页面，打开根目录下的<code>source/categories/index.md</code>，默认内容是</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">title:</span> <span class="hljs-string">categories</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2023-01-05 22:02:23</span><br></code></pre></td></tr></table></figure></li><li><p>我们增加一行，使其变成</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">title:</span> <span class="hljs-string">categories</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2023-01-05 22:02:23</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">&quot;categories&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>标签页做法类似，只需要把categories改成tags即可，关于页则是生成page about之后自己编辑即可。</p></li><li><p>在站点配置文件设置个人信息</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">title:</span> <span class="hljs-string">围墙里的鱼的围墙</span><br><span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;个人博客&#x27;</span><br><span class="hljs-attr">author:</span> <span class="hljs-string">围墙里的鱼</span><br></code></pre></td></tr></table></figure></li><li><p>在主题配置文件设置个人头像，文件放在主题目录的<code>source/images/</code>文件夹下面</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">avatar:</span><br>  <span class="hljs-attr">url:</span> <span class="hljs-string">/images/avatar.jpg</span><br></code></pre></td></tr></table></figure></li><li><p>侧边栏社交功能，只显示图标</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">social:<br>  GitHub: https://github.com/yu-qi-hang || fab fa-github<br>  E-Mail: 2659464450@qq.com || fa fa-envelope<br>social_icons:<br>  <span class="hljs-built_in">enable</span>: <span class="hljs-literal">true</span><br>  icons_only: <span class="hljs-literal">true</span><br>  transition: <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure></li><li><p>右上角添加fork your github。在themes&#x2F;next&#x2F;layout&#x2F;_layout.njk中添加代码</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#在body的headband div后面添加如下代码</span><br>&lt;div class=<span class="hljs-string">&quot;forkme&quot;</span>&gt;<br>  &lt;a href=<span class="hljs-string">&quot;https://github.com/yu-qi-hang&quot;</span> class=<span class="hljs-string">&quot;github-corner&quot;</span> aria-label=<span class="hljs-string">&quot;View source on GitHub&quot;</span>&gt;&lt;svg width=<span class="hljs-string">&quot;80&quot;</span> height=<span class="hljs-string">&quot;80&quot;</span> viewBox=<span class="hljs-string">&quot;0 0 250 250&quot;</span> style=<span class="hljs-string">&quot;fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;&quot;</span> aria-hidden=<span class="hljs-string">&quot;true&quot;</span>&gt;&lt;path d=<span class="hljs-string">&quot;M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z&quot;</span>&gt;&lt;/path&gt;&lt;path d=<span class="hljs-string">&quot;M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2&quot;</span> fill=<span class="hljs-string">&quot;currentColor&quot;</span> style=<span class="hljs-string">&quot;transform-origin: 130px 106px;&quot;</span> class=<span class="hljs-string">&quot;octo-arm&quot;</span>&gt;&lt;/path&gt;&lt;path d=<span class="hljs-string">&quot;M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z&quot;</span> fill=<span class="hljs-string">&quot;currentColor&quot;</span> class=<span class="hljs-string">&quot;octo-body&quot;</span>&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;style&gt;.github-corner:hover .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;@keyframes octocat-wave&#123;0%,100%&#123;transform:rotate(0)&#125;20%,60%&#123;transform:rotate(-25deg)&#125;40%,80%&#123;transform:rotate(10deg)&#125;&#125;@media (max-width:500px)&#123;.github-corner:hover .octo-arm&#123;animation:none&#125;.github-corner .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;&#125;&lt;/style&gt;<br>&lt;/div&gt;<br><span class="hljs-comment">#如果要实现屏幕变小之后不显示，在head的title后面添加如下代码</span><br>  &lt;style&gt;<br>  .forkme&#123;<br>display: none;<br>&#125;<br>  @media (min-width: 768px) &#123;<br>.forkme&#123;<br>display: inline;<br>&#125;<br>  &#125;<br>  &lt;/style&gt;<br></code></pre></td></tr></table></figure></li><li><p>增加版权声明，在主题配置文件中找到下面的并且修改</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">creative_commons:<br>  license: by-nc-sa<br>  sidebar: <span class="hljs-literal">false</span><br>  post: <span class="hljs-literal">true</span><br>  language:<br></code></pre></td></tr></table></figure></li><li><p>增加加载进度条，在主题配置文件中找到pace，设为true。</p></li></ol><h3 id="三、第三方服务集成"><a href="#三、第三方服务集成" class="headerlink" title="三、第三方服务集成"></a>三、第三方服务集成</h3><h4 id="数学公式渲染"><a href="#数学公式渲染" class="headerlink" title="数学公式渲染"></a>数学公式渲染</h4><p>主题配置文件把 mathjax 的 enable 设为 true</p><h4 id="百度统计"><a href="#百度统计" class="headerlink" title="百度统计"></a>百度统计</h4><p>登录 <a href="https://tongji.baidu.com/">百度统计</a> 添加网站信息，到代码获取页面，复制打码部分字段，修改主题配置文件的 baidu_analytics 值为此字段。<br><img src="/..%5C..%5C..%5Cassets%5Ccp0svstigr17mp8r%5C1672991290945-302a055a-acaf-4f85-b8d9-e1cddada52bb.png" alt="image.png"></p><h4 id="Local-Search"><a href="#Local-Search" class="headerlink" title="Local Search"></a>Local Search</h4><p>修改 BLOG\node_modules\hexo-generator-searchdb\dist 文件夹下的js后缀为json</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#安装插件</span><br>npm install hexo-generator-searchdb --save<br><br><span class="hljs-comment">#修改站点配置文件</span><br>search:<br>  path: search.json<br>  field: post<br>  format: html<br>  <span class="hljs-built_in">limit</span>: 10000<br><span class="hljs-comment">#修改主题配置文件</span><br>local_search:<br>  <span class="hljs-built_in">enable</span>: <span class="hljs-literal">true</span><br>top_n_per_article: -1<br></code></pre></td></tr></table></figure><h4 id="标签云"><a href="#标签云" class="headerlink" title="标签云"></a>标签云</h4><p>安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-tag-cloud<br></code></pre></td></tr></table></figure><p>配置文件<br>在 BLOG\themes\next\layout_macro\sidebar.njk 文件中添加代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#123;% <span class="hljs-keyword">if</span> site.tags.length &gt; 1 %&#125;<br>&lt;script <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> charset=<span class="hljs-string">&quot;utf-8&quot;</span> src=<span class="hljs-string">&quot;/js/tagcloud.js&quot;</span>&gt;&lt;/script&gt;<br>&lt;script <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> charset=<span class="hljs-string">&quot;utf-8&quot;</span> src=<span class="hljs-string">&quot;/js/tagcanvas.js&quot;</span>&gt;&lt;/script&gt;<br>&lt;div class=<span class="hljs-string">&quot;widget-wrap&quot;</span>&gt;<br>    &lt;h3 class=<span class="hljs-string">&quot;widget-title&quot;</span>&gt;Tag Cloud&lt;/h3&gt;<br>    &lt;div <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;myCanvasContainer&quot;</span> class=<span class="hljs-string">&quot;widget tagcloud&quot;</span>&gt;<br>        &lt;canvas width=<span class="hljs-string">&quot;250&quot;</span> height=<span class="hljs-string">&quot;250&quot;</span> <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;resCanvas&quot;</span> style=<span class="hljs-string">&quot;width=100%&quot;</span>&gt;<br>            &#123;&#123; list_tags() &#125;&#125;<br>        &lt;/canvas&gt;<br>    &lt;/div&gt;<br>&lt;/div&gt;<br>&#123;% endif %&#125;<br></code></pre></td></tr></table></figure><p>添加完效果如图<img src="/posts/2cc5/highlight.png" class="" title="image.png"></p><h4 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h4><p>Next 8.x 已经集成了需要的插件<br>编辑需要插入的代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;!--音乐插件--&gt;<br>&lt;!-- require APlayer --&gt;<br>&lt;<span class="hljs-built_in">link</span> rel=<span class="hljs-string">&quot;stylesheet&quot;</span> href=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css&quot;</span>&gt;<br>&lt;script src=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js&quot;</span>&gt;&lt;/script&gt;<br>&lt;!-- require MetingJS--&gt;<br>&lt;script src=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js&quot;</span>&gt;&lt;/script&gt; <br>&lt;!--QQ音乐外链地址--&gt;   <br>&lt;meting-js<br>    server=<span class="hljs-string">&quot;tencent&quot;</span><br>    <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;song&quot;</span> <br>    <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;001oqXcA34gsMM&quot;</span><br>    mini=<span class="hljs-string">&quot;false&quot;</span><br>    fixed=<span class="hljs-string">&quot;false&quot;</span><br>    list-folded=<span class="hljs-string">&quot;true&quot;</span><br>    autoplay=<span class="hljs-string">&quot;false&quot;</span><br>    volume=<span class="hljs-string">&quot;0.4&quot;</span><br>    theme=<span class="hljs-string">&quot;#FADFA3&quot;</span><br>    order=<span class="hljs-string">&quot;list&quot;</span><br>    loop=<span class="hljs-string">&quot;all&quot;</span><br>    preload=<span class="hljs-string">&quot;auto&quot;</span><br>    mutex=<span class="hljs-string">&quot;true&quot;</span>&gt;<br>&lt;/meting-js&gt;<br></code></pre></td></tr></table></figure><table><thead><tr><th><strong>选项</strong></th><th><strong>默认</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>id(编号)</td><td>require</td><td>歌曲ID &#x2F;播放列表ID &#x2F;专辑ID &#x2F;搜索关键字</td></tr><tr><td>server(平台)</td><td>require</td><td>音乐平台：netease，tencent，kugou，xiami，baidu</td></tr><tr><td>type（类型）</td><td>require</td><td>song，playlist，album，search，artist</td></tr><tr><td>auto（支持类种 类）</td><td>options</td><td>音乐链接，支持：netease，tencent，xiami</td></tr><tr><td>fixed（固定模式）</td><td>false</td><td>启用固定模式</td></tr><tr><td>mini（迷你模式）</td><td>false</td><td>启用迷你模式</td></tr><tr><td>autoplay（自动播放）</td><td>false</td><td>音频自动播放</td></tr><tr><td>theme(主题颜色)</td><td><code>#2980b9</code></td><td>默认#2980b9</td></tr><tr><td>loop（循环）</td><td>all</td><td>播放器循环播放，值：“all”，one”，“none”</td></tr><tr><td>order(顺序)</td><td>list</td><td>播放器播放顺序，值：“list”，“random”</td></tr><tr><td>preload(加载)</td><td>auto</td><td>值：“none”，“metadata”，“’auto”</td></tr><tr><td>volume（声量）</td><td>0.7</td><td>默认音量，请注意播放器会记住用户设置，用户自己设置音量后默认音量将不起作用</td></tr><tr><td>mutex（限制）</td><td>true</td><td>防止同时播放多个玩家，在该玩家开始播放时暂停其他玩家</td></tr><tr><td>lrc-type（歌词）</td><td>0</td><td>歌词显示</td></tr><tr><td>list-folded（列表折叠）</td><td>false</td><td>指示列表是否应该首先折叠</td></tr><tr><td>list-max-height（最大高度）</td><td>340px</td><td>列出最大高度</td></tr><tr><td>storage-name（储存名称）</td><td>metingjs</td><td>存储播放器设置的localStorage键</td></tr></tbody></table><p>这就是ID的获取方式，其他平台类似</p><img src="/posts/2cc5/id.png" class="" title="image.png"><p>插入代码到需要的位置，打开主题文件夹下的 <code>layout/_macro/sidebar.njk</code>   文件，插入到如图所示位置，不同位置会导致显示位置不同。<img src="/posts/2cc5/layout.png" class="" title="image.png"><br>为了避免切换页面引起重新播放，需要进行全局设置，在主题文件夹下的 <code>layout/_layout.njk</code> 里面添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;!--pjax：防止跳转页面音乐暂停--&gt;<br> &lt;script src=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/pjax@0.2.8/pjax.js&quot;</span>&gt;&lt;/script&gt;<br></code></pre></td></tr></table></figure><img src="/posts/2cc5/refresh.png" class="" title="image.png"><p>在主题配置文件中修改 <code>pjax: true</code>。<br>该操作有一个问题，本质上是是sidebar不刷新，因此进入新页面会导致sidebar依然显示站点概览而不是文章目录，所以我去掉了该功能。</p>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>捣鼓记录</category>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Next8-x标签归档美化</title>
    <link href="/posts/d52e/"/>
    <url>/posts/d52e/</url>
    
    <content type="html"><![CDATA[<h3 id="一、标签页美化"><a href="#一、标签页美化" class="headerlink" title="一、标签页美化"></a>一、标签页美化</h3><ol><li><p>在 <code>themes/next/layout/</code> 目录下面新建 <code>tag-color.njk</code> 填入以下内容</p> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;script type=&quot;text/javascript&quot;&gt;<br><span class="hljs-selector-tag">var</span> alltags = document<span class="hljs-selector-class">.getElementsByClassName</span>(&#x27;tag-cloud-tags&#x27;);<br><span class="hljs-selector-tag">var</span> tags = alltags<span class="hljs-selector-attr">[0]</span><span class="hljs-selector-class">.getElementsByTagName</span>(&#x27;<span class="hljs-selector-tag">a</span>&#x27;);<br>for (<span class="hljs-selector-tag">var</span> <span class="hljs-selector-tag">i</span> = tags<span class="hljs-selector-class">.length</span> - <span class="hljs-number">1</span>; <span class="hljs-selector-tag">i</span> &gt;= <span class="hljs-number">0</span>; <span class="hljs-selector-tag">i</span>--) &#123;<br>  <span class="hljs-selector-tag">var</span> r=Math<span class="hljs-selector-class">.floor</span>(Math<span class="hljs-selector-class">.random</span>()*<span class="hljs-number">75</span>+<span class="hljs-number">130</span>);<br>  <span class="hljs-selector-tag">var</span> g=Math<span class="hljs-selector-class">.floor</span>(Math<span class="hljs-selector-class">.random</span>()*<span class="hljs-number">75</span>+<span class="hljs-number">100</span>);<br>  <span class="hljs-selector-tag">var</span> <span class="hljs-selector-tag">b</span>=Math<span class="hljs-selector-class">.floor</span>(Math<span class="hljs-selector-class">.random</span>()*<span class="hljs-number">75</span>+<span class="hljs-number">80</span>);<br>  tags<span class="hljs-selector-attr">[i]</span><span class="hljs-selector-class">.style</span><span class="hljs-selector-class">.background</span> = &quot;rgb(&quot;+r+&quot;,&quot;+g+&quot;,&quot;+<span class="hljs-selector-tag">b</span>+&quot;)&quot;;<br>  &#125;<br>  &lt;/script&gt;<br><br>  &lt;style&gt;<br>  <span class="hljs-selector-class">.tag-cloud-tags</span>&#123;<br>    <span class="hljs-comment">/*font-family: Helvetica, Tahoma, Arial;*/</span><br>    <span class="hljs-comment">/*font-weight: 100;*/</span><br>    <span class="hljs-attribute">text-align</span>: center;<br>    <span class="hljs-attribute">counter-reset</span>: tags;<br>  &#125;<br>  <span class="hljs-selector-class">.tag-cloud-tags</span> <span class="hljs-selector-tag">a</span>&#123;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">6px</span>;<br>    <span class="hljs-attribute">padding-right</span>: <span class="hljs-number">5px</span>;<br>    <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">5px</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">8px</span> <span class="hljs-number">5px</span> <span class="hljs-number">0px</span> <span class="hljs-number">0px</span>;<br>  &#125;<br>  <span class="hljs-selector-class">.tag-cloud-tags</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:before</span>&#123;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;🔖&quot;</span>;<br>  &#125;<br><br>  <span class="hljs-selector-class">.tag-cloud-tags</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span>&#123;<br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0px</span> <span class="hljs-number">5px</span> <span class="hljs-number">15px</span> <span class="hljs-number">0px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,.<span class="hljs-number">4</span>);<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scale</span>(<span class="hljs-number">1.1</span>);<br>    <span class="hljs-comment">/*box-shadow: 10px 10px 15px 2px rgba(0,0,0,.12), 0 0 6px 0 rgba(104, 104, 105, 0.1);*/</span><br>    <span class="hljs-attribute">transition-duration</span>: <span class="hljs-number">0.15s</span>;<br>  &#125;<br>  &lt;/style&gt;<br></code></pre></td></tr></table></figure></li><li><p>在 <code>themes/next/layout/_partials/page/tags.njk</code> 中引入该文件 +</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tag-cloud&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tag-cloud-title&quot;</span>&gt;</span><br>    &#123;&#123; _p(&#x27;counter.tag_cloud&#x27;, site.tags.length) &#125;&#125;<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      <br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tag-cloud-tags&quot;</span>&gt;</span><br>    &#123;&#123; tagcloud(&#123;<br>    min_font: theme.tagcloud.min,<br>    max_font: theme.tagcloud.max,<br>    amount  : theme.tagcloud.amount,<br>    orderby : theme.tagcloud.orderby,<br>    order   : theme.tagcloud.order,<br>    class   : &#x27;tag-cloud&#x27;<br>    &#125;)<br>    &#125;&#125;<br>    +   &#123;% include &#x27;tag-color.njk&#x27; %&#125;<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ol><h3 id="二、文章底部标签美化"><a href="#二、文章底部标签美化" class="headerlink" title="二、文章底部标签美化"></a>二、文章底部标签美化</h3><p>在 <code>blog/source/_date/styles.styl</code> 中增加如下内容，没有该文件需要自己新建，并且打开主题配置文件中对该文件的注释行</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/*文章底部标签样式*/</span><br><span class="hljs-selector-class">.posts-expand</span> <span class="hljs-selector-class">.post-tags</span> <span class="hljs-selector-tag">a</span> &#123;<br>  -webkit-<span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">1px</span> <span class="hljs-number">3px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">12</span>), <span class="hljs-number">0</span> <span class="hljs-number">1px</span> <span class="hljs-number">2px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">24</span>);<br>  -moz-<span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">1px</span> <span class="hljs-number">3px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">12</span>), <span class="hljs-number">0</span> <span class="hljs-number">1px</span> <span class="hljs-number">2px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">24</span>);<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">1px</span> <span class="hljs-number">3px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">12</span>), <span class="hljs-number">0</span> <span class="hljs-number">1px</span> <span class="hljs-number">2px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">24</span>);<br>  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;Comic Sans MS&#x27;</span>, sans-serif;<br>  <span class="hljs-attribute">transition</span>: .<span class="hljs-number">2s</span> ease-out;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">3px</span> <span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#f5f5f5</span>;<br>  <span class="hljs-attribute">border-bottom</span>: none;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">15px</span>;<br><br>  +mobile()&#123;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">1px</span> <span class="hljs-number">3px</span>;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">8px</span>;<br>  &#125;<br><br>  &amp;<span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">100</span>,<span class="hljs-number">154</span>,<span class="hljs-number">182</span>,<span class="hljs-number">0.902</span>);<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>    -webkit-<span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">8px</span> <span class="hljs-number">16px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.2</span>), <span class="hljs-number">0</span> <span class="hljs-number">6px</span> <span class="hljs-number">20px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.19</span>);<br>    -moz-<span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">8px</span> <span class="hljs-number">16px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.2</span>), <span class="hljs-number">0</span> <span class="hljs-number">6px</span> <span class="hljs-number">20px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.19</span>);<br>    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">8px</span> <span class="hljs-number">16px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.2</span>), <span class="hljs-number">0</span> <span class="hljs-number">6px</span> <span class="hljs-number">20px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0.19</span>);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><img src="/posts/d52e/style.png" class="" title="image-20230210205448182.png"><h3 id="三、归档页美化"><a href="#三、归档页美化" class="headerlink" title="三、归档页美化"></a>三、归档页美化</h3><p>修改 <code>themes/next/layout/_macro/post-collapse.njk</code> 为如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% macro render(posts) %&#125;<br>&#123;%- set current_year = &#x27;1970&#x27; %&#125;<br>&#123;%- for post in posts.toArray() %&#125;<br><br>&#123;%- set year = date(post.date, &#x27;YYYY&#x27;) %&#125;<br><br>&#123;%- if year !== current_year %&#125;<br>&#123;%- set current_year = year %&#125;<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;collection-year&quot;</span>&gt;</span><br>  &lt;&#123;%- if theme.seo %&#125;h2&#123;% else %&#125;h1&#123;%- endif %&#125; class=&quot;collection-header&quot;&gt;&#123;&#123; current_year &#125;&#125;&lt;/&#123;%- if theme.seo %&#125;h2&#123;% else %&#125;h1&#123;%- endif %&#125;&gt;<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>&#123;%- endif %&#125;<br><br><span class="hljs-tag">&lt;<span class="hljs-name">article</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-post post-type-&#123;&#123; post.type | default(&#x27;normal&#x27;) &#125;&#125;&quot;</span> <span class="hljs-attr">itemscope</span> <span class="hljs-attr">itemtype</span>=<span class="hljs-string">&quot;http://schema.org/Article&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">header</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-post-header&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-post-meta&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">time</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-post-time&quot;</span> <span class="hljs-attr">itemprop</span>=<span class="hljs-string">&quot;dateCreated&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">datetime</span>=<span class="hljs-string">&quot;&#123;&#123; moment(post.date).format() &#125;&#125;&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;&#123;&#123; date(post.date, config.date_format) &#125;&#125;&quot;</span>&gt;</span><br>        &#123;&#123; date(post.date, &#x27;MM-DD&#x27;) &#125;&#125;<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">time</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    &lt;&#123;%- if theme.seo %&#125;h3&#123;% else %&#125;h2&#123;%- endif %&#125; class=&quot;my-post-title&quot;&gt;<br>      &#123;%- if post.link %&#125;&#123;# Link posts #&#125;<br>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-post-title-link post-title-link-external&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;&#123; url_for(post.link) &#125;&#125;&quot;</span> <span class="hljs-attr">itemprop</span>=<span class="hljs-string">&quot;url&quot;</span>&gt;</span><br>        &#123;&#123; post.title or post.link &#125;&#125;<br>        <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-external-link&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>      &#123;% else %&#125;<br>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-post-title-link&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot;</span> <span class="hljs-attr">itemprop</span>=<span class="hljs-string">&quot;url&quot;</span>&gt;</span><br>        &#123;% if post.type === &#x27;picture&#x27; %&#125;<br>        &#123;&#123; post.content &#125;&#125;<br>        &#123;% else %&#125;<br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">itemprop</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span>&#123;&#123; post.title or __(&#x27;post.untitled&#x27;) &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>        &#123;% endif %&#125;<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>      &#123;%- endif %&#125;<br>    &lt;/&#123;%- if theme.seo %&#125;h3&#123;% else %&#125;h2&#123;%- endif %&#125;&gt;<br><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">article</span>&gt;</span><br><br>&#123;%- endfor %&#125;<br>&#123;% endmacro %&#125;<br></code></pre></td></tr></table></figure><p>在 <code>blog/source/_data/styles.styl</code> 中增加</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 归档页样式 began */</span><br><span class="hljs-selector-class">.page-archive</span> <span class="hljs-selector-class">.archive-page-counter</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">18px</span>;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgb</span>(<span class="hljs-number">20</span>, <span class="hljs-number">90</span>, <span class="hljs-number">140</span>);<br>  <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">padding-right</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">8px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>  +mobile() &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br>  &#125;<br>&#125;<br><span class="hljs-selector-class">.my-post-time</span>&#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">11px</span>;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgb</span>(<span class="hljs-number">20</span>, <span class="hljs-number">90</span>, <span class="hljs-number">140</span>);<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">padding-right</span>: <span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">15px</span>;<br>&#125;<br><span class="hljs-selector-class">.mypost</span>&#123;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;<br>  -webkit-<span class="hljs-attribute">transition</span>: all .<span class="hljs-number">2s</span> ease-in-out;<br>  -moz-<span class="hljs-attribute">transition</span>: all .<span class="hljs-number">2s</span> ease-in-out;<br>  -o-<span class="hljs-attribute">transition</span>: all .<span class="hljs-number">2s</span> ease-in-out;<br>  -ms-<span class="hljs-attribute">transition</span>: all .<span class="hljs-number">2s</span> ease-in-out;<br>  <span class="hljs-attribute">transition</span>: all .<span class="hljs-number">2s</span> ease-in-out;<br>&#125;<br><span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.my-post-title-link</span><span class="hljs-selector-pseudo">:before</span>&#123;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">18px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">18px</span>;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;📚&quot;</span>;<br>  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">5px</span>;<br>  <span class="hljs-attribute">font</span>: normal normal normal <span class="hljs-number">14px</span>/<span class="hljs-number">1</span> FontAwesome;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">15px</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">18px</span>;<br>&#125;<br><span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.my-post-title-link</span>&#123;<br>  <span class="hljs-attribute">text-decoration</span>: none;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">15px</span>;<br>  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">400</span>;<br>  +mobile() &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>;<br>  &#125;<br>&#125;<br><span class="hljs-selector-class">.my-post-title</span>&#123;<br>  <span class="hljs-attribute">display</span>: block;<br>  <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">4.5rem</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#4c4948</span>;<br>  <span class="hljs-attribute">text-decoration</span>: none;<br>  <span class="hljs-attribute">font-size</span>: .<span class="hljs-number">8rem</span>;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>  +mobile() &#123;<br>    //<span class="hljs-attribute">margin-left</span>: <span class="hljs-number">4rem</span>;<br>  &#125;<br>&#125;<br><span class="hljs-selector-class">.my-post-header</span>&#123;<br>  <span class="hljs-attribute">position</span>: top;<br>  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;<br>  -webkit-<span class="hljs-attribute">transition</span>: all .<span class="hljs-number">2s</span> ease-in-out;<br>  -moz-<span class="hljs-attribute">transition</span>: all .<span class="hljs-number">2s</span> ease-in-out;<br>  -o-<span class="hljs-attribute">transition</span>: all .<span class="hljs-number">2s</span> ease-in-out;<br>  -ms-<span class="hljs-attribute">transition</span>: all .<span class="hljs-number">2s</span> ease-in-out;<br>  <span class="hljs-attribute">transition</span>: all .<span class="hljs-number">2s</span> ease-in-out;<br>&#125;<br>//<span class="hljs-selector-class">.my-post-title-link</span>&#123;<br>  //  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br>  //  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">500</span>;<br>  //&#125;<br><span class="hljs-selector-class">.my-post-meta</span>&#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#99a9bf</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">80px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#114142</span>;<br>&#125;<br><span class="hljs-selector-tag">div</span><span class="hljs-selector-class">.post-block</span><span class="hljs-selector-class">.tag</span> <span class="hljs-selector-class">.collection-title</span> <span class="hljs-selector-tag">h2</span> &#123;<br>  <span class="hljs-attribute">border-width</span>: <span class="hljs-number">1px</span>;<br>  <span class="hljs-attribute">border-style</span>: solid;<br>  <span class="hljs-attribute">border-color</span>: <span class="hljs-number">#3f3f3f</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">22px</span>;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#b4e8fa</span>;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">2px</span> <span class="hljs-number">15px</span>;<br>  <span class="hljs-attribute">letter-spacing</span>: <span class="hljs-number">1.5px</span>;<br>  <span class="hljs-attribute">box-sizing</span>: border-box;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#3f3f3f</span>;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0</span> <span class="hljs-number">10px</span>;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  +mobile()&#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">18px</span>;<br>  &#125;<br>&#125;<br><span class="hljs-comment">/* 归档页样式 end */</span><br></code></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://jrbcode.gitee.io/posts/be9758cd.html">Hexo+NexT博客归档&#x2F;标签&#x2F;分类页美化 | CodeHeap (gitee.io)</a></p>]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>捣鼓记录</category>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Next</tag>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Next主题导入JQuery</title>
    <link href="/posts/6c58/"/>
    <url>/posts/6c58/</url>
    
    <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>使用Next主题的Hexo博客，在进行个性化配置时，可能出现</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">Uncaught ReferenceError: $ is not defined`<br></code></pre></td></tr></table></figure><p>这是由于使用的插件引用了 <code>JQuery</code>　但是我们没有导入。 </p><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>在Next的主题配置文件 <code>_config.yml</code> 中，找到</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">vendors:</span><br></code></pre></td></tr></table></figure><p>在下面增加一行，即可导入。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">jquery:</span> <span class="hljs-string">//cdn.jsdelivr.net/npm/jquery@3/dist/jquery.min.js</span><br></code></pre></td></tr></table></figure><img src="/posts/6c58/jquery.png" class="" title="image-20230210201839159.png">]]></content>
    
    
    <categories>
      
      <category>计算机</category>
      
      <category>捣鼓记录</category>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Next</tag>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
